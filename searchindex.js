Search.setIndex({"docnames": ["References", "_autosummary/caser", "_autosummary/caser.guidance", "_autosummary/caser.guidance.ELQR", "_autosummary/caser.guidance.ELQROSPA", "_autosummary/caser.guidance.gaussian_density_cost", "_autosummary/caser.swarm_estimator", "_autosummary/caser.swarm_estimator.slam", "_autosummary/caser.swarm_estimator.tracker", "_autosummary/caser.swarm_estimator.tracker.CardinalizedPHD", "_autosummary/caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli", "_autosummary/caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli", "_autosummary/caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli", "_autosummary/caser.swarm_estimator.tracker.IMMCardinalizedPHD", "_autosummary/caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli", "_autosummary/caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli", "_autosummary/caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity", "_autosummary/caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli", "_autosummary/caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli", "_autosummary/caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture", "_autosummary/caser.swarm_estimator.tracker.ProbabilityHypothesisDensity", "_autosummary/caser.swarm_estimator.tracker.RandomFiniteSetBase", "_autosummary/caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli", "_autosummary/caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli", "_autosummary/caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli", "_autosummary/caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli", "_autosummary/caser.utilities", "_autosummary/caser.utilities.graphs", "_autosummary/caser.utilities.graphs.a_star_search", "_autosummary/caser.utilities.graphs.bfm_shortest_path", "_autosummary/caser.utilities.graphs.k_shortest", "_autosummary/caser.utilities.graphs.murty_m_best", "_autosummary/caser.utilities.graphs.murty_m_best_all_meas_assigned", "_autosummary/caser.utilities.graphs_subroutines", "_autosummary/caser.utilities.graphs_subroutines.AStarNode", "_autosummary/caser.utilities.graphs_subroutines.assign_opt", "_autosummary/caser.utilities.graphs_subroutines.astar_return_path", "_autosummary/caser.utilities.sampling", "_autosummary/caser.utilities.sampling.gibbs", "_autosummary/caser.utilities.sampling.mm_gibbs", "api", "cicd", "index", "license", "toolchain", "usage", "usage/elqr"], "filenames": ["References.rst", "_autosummary/caser.rst", "_autosummary/caser.guidance.rst", "_autosummary/caser.guidance.ELQR.rst", "_autosummary/caser.guidance.ELQROSPA.rst", "_autosummary/caser.guidance.gaussian_density_cost.rst", "_autosummary/caser.swarm_estimator.rst", "_autosummary/caser.swarm_estimator.slam.rst", "_autosummary/caser.swarm_estimator.tracker.rst", "_autosummary/caser.swarm_estimator.tracker.CardinalizedPHD.rst", "_autosummary/caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.rst", "_autosummary/caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.rst", "_autosummary/caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.rst", "_autosummary/caser.swarm_estimator.tracker.IMMCardinalizedPHD.rst", "_autosummary/caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.rst", "_autosummary/caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.rst", "_autosummary/caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity.rst", "_autosummary/caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.rst", "_autosummary/caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.rst", "_autosummary/caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.rst", "_autosummary/caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.rst", "_autosummary/caser.swarm_estimator.tracker.RandomFiniteSetBase.rst", "_autosummary/caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.rst", "_autosummary/caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.rst", "_autosummary/caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.rst", "_autosummary/caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.rst", "_autosummary/caser.utilities.rst", "_autosummary/caser.utilities.graphs.rst", "_autosummary/caser.utilities.graphs.a_star_search.rst", "_autosummary/caser.utilities.graphs.bfm_shortest_path.rst", "_autosummary/caser.utilities.graphs.k_shortest.rst", "_autosummary/caser.utilities.graphs.murty_m_best.rst", "_autosummary/caser.utilities.graphs.murty_m_best_all_meas_assigned.rst", "_autosummary/caser.utilities.graphs_subroutines.rst", "_autosummary/caser.utilities.graphs_subroutines.AStarNode.rst", "_autosummary/caser.utilities.graphs_subroutines.assign_opt.rst", "_autosummary/caser.utilities.graphs_subroutines.astar_return_path.rst", "_autosummary/caser.utilities.sampling.rst", "_autosummary/caser.utilities.sampling.gibbs.rst", "_autosummary/caser.utilities.sampling.mm_gibbs.rst", "api.rst", "cicd.rst", "index.rst", "license.rst", "toolchain.rst", "usage.rst", "usage/elqr.rst"], "titles": ["References", "caser", "caser.guidance", "caser.guidance.ELQR", "caser.guidance.ELQROSPA", "caser.guidance.gaussian_density_cost", "caser.swarm_estimator", "caser.swarm_estimator.slam", "caser.swarm_estimator.tracker", "caser.swarm_estimator.tracker.CardinalizedPHD", "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli", "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli", "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli", "caser.swarm_estimator.tracker.IMMCardinalizedPHD", "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli", "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli", "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity", "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli", "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli", "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture", "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity", "caser.swarm_estimator.tracker.RandomFiniteSetBase", "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli", "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli", "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli", "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli", "caser.utilities", "caser.utilities.graphs", "caser.utilities.graphs.a_star_search", "caser.utilities.graphs.bfm_shortest_path", "caser.utilities.graphs.k_shortest", "caser.utilities.graphs.murty_m_best", "caser.utilities.graphs.murty_m_best_all_meas_assigned", "caser.utilities.graphs_subroutines", "caser.utilities.graphs_subroutines.AStarNode", "caser.utilities.graphs_subroutines.assign_opt", "caser.utilities.graphs_subroutines.astar_return_path", "caser.utilities.sampling", "caser.utilities.sampling.gibbs", "caser.utilities.sampling.mm_gibbs", "API Reference", "CI/CD Pipeline", "CASER\u2019s documentation", "License", "Toolchain Setup", "Usage", "ELQR Examples"], "terms": {"1": [0, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 38, 43, 46], "ingemar": 0, "j": [0, 5], "cox": 0, "A": [0, 1, 29, 34, 41, 42, 43], "review": [0, 43], "statist": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "data": [0, 2, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 43], "associ": [0, 10, 11, 12, 14, 15, 17, 18, 24, 25, 30, 43], "techniqu": 0, "motion": 0, "correspond": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 43], "intern": [0, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25], "journal": 0, "comput": [0, 43, 44], "vision": 0, "10": [0, 5, 9, 13, 20, 29, 43, 46], "53": 0, "66": 0, "1993": 0, "2": [0, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43, 46], "wayn": 0, "e": [0, 10, 11, 34, 41, 42, 43, 44], "hoover": 0, "algorithm": [0, 2, 3, 6, 8, 14, 27, 29, 30, 31, 32, 33, 35, 38, 39, 46], "confid": 0, "circl": [0, 46], "ellips": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "technic": 0, "report": [0, 42, 44], "nation": 0, "ocean": 0, "atmospher": 0, "administr": 0, "1984": 0, "3": [0, 3, 9, 13, 16, 20, 43, 44, 46], "ryan": [0, 42], "w": [0, 42, 43, 46], "thoma": [0, 42], "jordan": [0, 42], "d": [0, 5, 29, 42, 43], "larson": [0, 42], "reced": 0, "horizon": [0, 46], "extend": [0, 43], "linear": [0, 10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25, 46], "quadrat": [0, 3, 4, 46], "regul": 0, "rf": [0, 1, 2, 6, 8, 9, 13, 16, 20, 21, 42], "base": [0, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 34, 38, 39, 41, 43, 45], "swarm": [0, 1, 3, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 42], "target": [0, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 38, 39, 46], "plan": [0, 3, 4, 46], "automat": [0, 3, 4, 41, 43, 44], "cost": [0, 3, 4, 5, 28, 29, 30, 31, 32, 34, 35, 38, 39, 43, 46], "function": [0, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 33, 37, 43, 46], "scale": [0, 3, 4], "ieee": 0, "transact": [0, 43], "control": [0, 1, 3, 4, 41, 42, 43, 46], "network": [0, 43], "system": [0, 41, 43, 44], "8": [0, 9, 43, 46], "566": 0, "575": 0, "jun": 0, "2021": 0, "doi": 0, "1109": 0, "tcn": 0, "3050133": 0, "4": [0, 3, 4, 20, 43, 46], "b": [0, 43, 46], "n": [0, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 38, 39], "vo": [0, 30, 31, 32], "k": [0, 5, 30, 46], "ma": 0, "The": [0, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 38, 39, 41, 43, 44, 46], "gaussian": [0, 3, 4, 5, 9, 13, 20, 45], "mixtur": [0, 3, 4, 5, 45], "probabl": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "hypothesi": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "densiti": [0, 3, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 46], "filter": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30], "signal": [0, 3, 4], "process": [0, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "54": 0, "11": [0, 29, 43], "4091": 0, "4104": 0, "2006": 0, "5": [0, 12, 20, 29, 43, 46], "t": [0, 5, 21, 41, 44], "label": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "random": [0, 1, 29, 38, 39, 42], "finit": [0, 1, 42, 46], "set": [0, 1, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 42, 44, 46], "multi": [0, 3, 4, 12, 17, 46], "object": [0, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 34, 43, 46], "conjug": 0, "prior": [0, 9, 13, 41, 43], "61": 0, "13": [0, 43], "3460": 0, "3475": 0, "jul": 0, "2013": 0, "6": [0, 12, 22, 29, 43, 46], "phung": 0, "bay": 0, "track": [0, 8, 10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25], "62": 0, "24": 0, "6554": 0, "6567": 0, "dec": 0, "2014": 0, "7": [0, 17, 38, 39, 43, 46], "ba": [0, 31, 32], "ngu": 0, "tuong": [0, 31, 32], "hung": 0, "gia": 0, "hoang": 0, "an": [0, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 43, 44, 46], "effici": [0, 38, 39], "implement": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 35, 37, 38, 39, 43], "gener": [0, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 37, 38, 39, 43, 44], "bernoulli": [0, 12, 17, 19], "65": 0, "1975": 0, "1987": 0, "apr": 0, "2017": 0, "tsp": 0, "2016": 0, "2641392": 0, "antonio": 0, "cantoni": 0, "cardin": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "model": [0, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43, 46], "In": [0, 43], "40th": 0, "annual": 0, "confer": 0, "inform": [0, 1, 11, 15, 16, 17, 18, 20, 25, 42, 43, 44], "scienc": 0, "681": 0, "686": 0, "9": [0, 9, 43, 44, 46], "analyt": 0, "55": 0, "3553": 0, "3567": 0, "2007": [0, 43], "python": [1, 29, 30, 31, 32, 35, 41, 42, 44], "packag": [1, 6, 10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25, 26, 40, 41, 42, 43, 44, 45], "command": [1, 41, 42, 43, 44], "c2i": [1, 42], "autonom": [1, 42], "emploi": [1, 42], "thi": [1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 35, 38, 39, 41, 42, 43, 44, 45, 46], "code": [1, 26, 29, 30, 31, 32, 43, 44], "i": [1, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 34, 38, 39, 40, 41, 43, 44, 46], "develop": [1, 41, 42, 43], "laboratori": [1, 42], "autonomi": [1, 42], "guidanc": [1, 46], "navig": 1, "estim": [1, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 34, 42], "research": [1, 42], "lager": [1, 42], "univers": [1, 42], "alabama": [1, 42], "modul": [1, 2, 6, 8, 26, 27, 33, 42, 45], "contain": [2, 6, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 41, 43, 44], "class": [2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 33, 34, 43], "structur": [2, 6, 8, 19, 21], "relat": [2, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "max_it": [3, 4], "1000": [3, 9, 13, 16, 20, 46], "0": [3, 5, 9, 13, 20, 21, 43, 46], "tol": [3, 4], "0001": 3, "sourc": [3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 43], "note": [3, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 38, 39, 42], "follow": [3, 5, 29, 30, 31, 32, 41, 42, 43, 44, 46], "maximum": [3, 4, 9, 12, 13, 30], "number": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 38, 39, 43, 44], "iter": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 38, 39, 46], "optim": [3, 4, 29, 31, 32, 35, 45], "type": [3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 43, 44], "int": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 38, 39], "rel": [3, 4], "toler": [3, 4], "converg": [3, 4, 5, 29], "float": [3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 35], "__init__": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 34], "initi": [3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43, 44], "paramet": [3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 35, 38, 39], "option": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 38, 39, 41, 43, 44], "default": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 38, 39, 44], "1e3": [3, 4], "1e": [3, 4, 12, 19, 20], "method": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 34, 37, 43], "find_end_st": [3, 4], "tt": [3, 4, 46], "cur_ind": [3, 4], "cur_stat": [3, 4], "find": [3, 4, 30, 31, 32, 43], "end": [3, 4, 10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25, 28, 34, 43, 46], "state": [3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 41, 43, 46], "given": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 41, 43], "current": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 34, 41], "timestep": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 46], "index": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 31, 32, 42, 44], "distribut": [3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 38, 39, 43, 46], "x": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 34, 38, 39, 46], "numpi": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 35, 38, 39, 46], "arrai": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 35, 38, 39, 46], "return": [3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 35, 38, 39, 43, 46], "best": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 31, 32, 35, 43], "gen_final_traj": [3, 4], "num_timestep": [3, 4], "start": [3, 4, 28, 34, 41, 42, 43, 44, 46], "state_arg": [3, 4], "ctrl_arg": [3, 4], "cost_arg": [3, 4, 46], "inv_state_arg": [3, 4], "inv_ctrl_arg": [3, 4], "final": [3, 4, 10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25, 43], "trajectori": [3, 4, 10, 11, 12, 14, 15, 17, 18, 22, 23, 24, 25], "total": [3, 4, 34], "gncpy": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 46], "singl": [3, 4, 9, 13, 17, 18, 21, 43, 46], "agent": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 46], "tupl": [3, 4, 9, 12, 13, 16, 20, 22, 23, 28, 29, 30, 31, 32, 35], "addit": [3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 41, 43, 46], "argument": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 44], "matrix": [3, 4, 9, 13, 16, 20, 21, 29, 30, 31, 32, 35, 38, 39], "input": [3, 4, 30, 46], "invers": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "transit": [3, 4], "state_traj": [3, 4], "nh": [3, 4], "ctrl_signal": [3, 4], "nu": [3, 4], "get_state_dist": [3, 4], "calcul": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 35, 46], "serum": [3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 46], "gaussianmixtur": [3, 4, 5, 12, 46], "init_elqr_lst": [3, 4], "start_dist": [3, 4, 46], "list": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 43, 44], "time": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43, 46], "non_quad_fun_factori": [3, 4], "factori": [3, 4], "creat": [3, 4, 9, 13, 16, 20, 41, 44, 46], "non": [3, 4, 43, 46], "should": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43, 44], "same": [3, 4, 19, 21, 43], "form": [3, 4, 29, 38, 39, 43], "need": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 41, 43, 44], "flag": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "arg": [3, 4, 22], "For": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43, 44], "gm": [3, 5, 9, 13, 46], "plu": [3, 4, 43, 46], "It": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 41, 43, 44], "part": [3, 4, 43], "callabl": [3, 4, 10, 11, 12, 14, 15, 17, 18, 22, 23, 24, 25], "end_dist": [3, 4, 46], "none": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 34, 38, 39], "provide_detail": [3, 4, 46], "fals": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "disp": [3, 4, 29], "true": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 46], "show_anim": [3, 4, 46], "save_anim": [3, 4, 46], "plt_opt": [3, 4, 46], "ttl": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 46], "fig": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 46], "cmap": [3, 4, 46], "plt_ind": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 46], "update_end": 3, "update_end_it": 3, "main": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 41], "get": [3, 4, 9, 13, 16, 20, 41, 42, 43, 44], "arguement": [3, 4], "bool": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "falg": [3, 4], "output": [3, 4, 21, 41, 43, 44, 46], "text": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "print": [3, 4], "anim": [3, 4, 9, 13, 16, 20, 46], "save": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "onli": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43, 44, 46], "appli": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "shown": [3, 4, 9, 13, 16, 19, 20], "dict": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "plot": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 46], "see": [3, 4, 9, 13, 22, 23, 41, 43, 44], "init_plotting_opt": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 46], "string": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "titl": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 42], "matplotlib": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 46], "figur": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 46], "handl": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "If": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 41, 43, 44], "suppli": [3, 4], "ar": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 34, 41, 43, 44], "ad": [3, 4, 43, 44], "colormap": [3, 4], "color": [3, 4, 46], "map": [3, 4, 9, 13], "differ": [3, 4, 5, 10, 11, 41, 43, 45], "get_cmap": [3, 4, 46], "indic": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 43], "vector": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29], "each": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 38, 39, 41, 43], "element": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30], "1xn": [3, 4], "nhxnu": [3, 4], "frame_list": [3, 4, 46], "pil": [3, 4], "imag": [3, 4, 41, 44], "being": [3, 4, 30, 43, 44], "set_control_model": [3, 4, 46], "singleelqr": [3, 4, 46], "us": [3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 35, 38, 39, 41, 42, 43, 44, 45, 46], "quad_modifi": [3, 4, 46], "modif": [3, 4, 29, 43, 46], "set_cost_model": [3, 4, 46], "safety_factor": [3, 5, 46], "y_ref": [3, 5, 46], "non_quad_fun": [3, 4, 46], "non_quad_weight": [3, 4, 46], "built": [3, 4], "allow": [3, 4, 9, 13, 21, 22, 23, 30, 43, 44], "specifi": [3, 4, 43, 44], "ani": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 43, 44], "term": [3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "must": [3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 43, 44], "here": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 35, 44, 46], "instead": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 43], "within": [3, 4, 41, 43, 44, 46], "directli": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 43], "due": [3, 4, 10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25], "factor": [3, 5], "radiu": [3, 46], "influenc": [3, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "refer": [3, 5, 41, 42, 43], "point": [3, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "sigmoid": [3, 5], "when": [3, 5, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 38, 39, 41, 43, 44, 46], "determin": [3, 12, 43], "th": 3, "between": [3, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "inclus": [3, 43], "have": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 30, 41, 43], "modifi": [3, 4, 30, 43, 46], "non_quadrat": [3, 4], "targets_to_wayarea": [3, 4, 46], "end_stat": [3, 4, 46], "convert": [3, 4, 46], "locat": [3, 4, 46], "wayarea": [3, 4, 46], "perform": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 43, 44], "princip": [3, 4], "compon": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "analysi": [3, 4], "pca": [3, 4], "nt": [3, 4], "all": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 41, 43, 44], "possibl": [3, 4, 29, 43], "one": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "per": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "row": [3, 4], "kwarg": [4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "elqr": [4, 42, 45], "na": 4, "ospa": [4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 45], "ospa_ind": [4, 46], "ospa_cutoff": [4, 46], "ospa_method": [4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 46], "state_dist": 5, "goal_dist": 5, "improv": [5, 44], "far": 5, "from": [5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 34, 35, 38, 39, 41, 43, 44, 46], "sum_": 5, "n_g": 5, "sigma_": 5, "g": [5, 29, 34, 44], "max": [5, 20, 38, 39], "left": 5, "w_": 5, "mathcal": 5, "mathbf": 5, "m": [5, 9, 13, 16, 20, 21, 29, 31, 32, 35, 38, 39], "_": 5, "p": [5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 42, 46], "right": [5, 29, 43], "20": [5, 43], "n_d": 5, "alpha": 5, "ln": 5, "desir": 5, "overbound": 5, "tune": 5, "extra": [5, 9, 12, 13, 16, 20, 21, 22, 23], "rang": 5, "max_expected_card": [9, 13], "probabilityhypothesisdens": [9, 13, 16], "constructor": [9, 20], "pass": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43, 44], "through": [9, 20, 43, 44], "parent": [9, 20, 22, 23, 29, 34], "agents_per_st": 9, "in_filt": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "inner": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "prob_detect": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "detect": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "prob_surv": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "surviv": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "birth_term": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "birth": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "clutter_r": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "clutter": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "rate": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "scan": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "clutter_den": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "inv_chi2_g": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "chi": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "gate": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "threshold": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "save_cov": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "covari": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "debug_plot": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "enabl": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "debug": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "enable_spawn": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "spawn": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "spawn_cov": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "spawn_weight": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "weight": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 46], "attribut": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "animate_state_plot": [9, 13, 16, 20], "state_lbl": [9, 13, 16, 19, 20], "state_color": [9, 13, 16, 19, 20], "interv": [9, 13, 16, 20], "250": [9, 13, 16, 20], "repeat": [9, 13, 16, 20], "repeat_delai": [9, 13, 16, 20], "save_path": [9, 13, 16, 20], "rgb": [9, 13, 16, 20], "valu": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "loop": [9, 13, 16, 20], "delai": [9, 13, 16, 20], "file": [9, 13, 16, 20, 41, 43, 44], "path": [9, 13, 16, 20, 28, 29, 30, 31, 32], "name": [9, 13, 16, 20, 43, 44], "gif": [9, 13, 16, 20], "doe": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 29, 43], "standard": [9, 13, 16, 20, 21, 43, 46], "f_hndl": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 46], "sig_bnd": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "rng": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 38, 39], "meas_ind": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "lgnd_loc": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "marker": [9, 13, 16, 19, 20, 46], "calculate_ospa": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "truth": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "ndarrai": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "c": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 42, 43, 46], "core_method": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "singleobjectdist": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 46], "true_cov": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "state_ind": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "distanc": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 35, 46], "wrapper": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "repres": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 43], "cutoff": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 46], "consid": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "properli": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "assign": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 35, 38, 39, 45], "how": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43, 44, 45], "error": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "penal": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "penalti": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "power": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "higher": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "outlier": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "more": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "enum": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "measur": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "local": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 41, 43, 44], "impli": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 38, 39, 43], "euclidean": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 46], "corresonpond": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "uncertainti": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "about": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "order": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "consist": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "core": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "helling": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "defautl": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "well": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 43, 44], "which": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 38, 39, 41, 43, 46], "mean": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "full": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43, 44], "cleanup": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "enable_prun": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "enable_cap": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "enable_merg": [9, 13, 16, 20], "enable_extract": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "extract_kwarg": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "step": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 41, 43], "can": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 41, 43, 44, 46], "prune": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "cap": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "extract": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "call": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 43, 44], "onc": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 41, 44], "separ": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 43], "recommend": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 44], "generalizedlabeledmultibernoulli": [9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25], "extract_st": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "prun": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "merg": [9, 13, 16, 20, 43], "correct": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "meas_in": [9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 24, 25], "meas_mat_arg": [9, 13, 16, 20], "est_meas_arg": [9, 13, 16, 20], "filt_arg": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25], "cphd": [9, 13], "hypothes": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25], "accord": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 43], "also": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43, 44, 46], "updat": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 41, 43], "2d": [9, 13, 16, 20], "keyword": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "allow_multipl": [9, 13], "after": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 43, 44], "inic": [9, 13], "multipl": [9, 13, 18, 41, 44], "load_filter_st": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "filt_stat": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "dictionari": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "save_filter_st": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "plot_card_dist": [9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 22, 23, 24, 25], "assum": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 29, 43], "ha": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43, 44, 46], "been": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "instanc": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "rais": [9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 22, 23, 24, 25], "runtimewarn": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "empti": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "plot_card_histori": [9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 22, 23, 24, 25], "true_card": [9, 13], "time_unit": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "histori": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "like": [9, 13, 38, 39, 43, 44], "unit": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 41, 44], "axi": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "time_vec": [9, 13], "plot_number_states_per_tim": [9, 13], "reach": [9, 13], "turn": [9, 13], "run": [9, 13, 38, 39, 41, 42, 43, 44, 46], "plot_ospa_histori": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "main_opt": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "sub_opt": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "plot_sub": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "requir": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "calcualt": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "approri": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "first": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 41, 43, 44, 46], "format": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 43, 44], "sub": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 44, 45], "wa": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "plot_stat": [9, 13, 16, 19, 20], "x_lbl": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "y_lbl": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 30, 31, 32, 35, 39, 41, 43, 44], "design": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 41, 43], "two": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 41, 43], "variabl": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "typic": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 43], "y": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 34, 46], "posit": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 30, 34, 44], "true_stat": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "appear": [9, 13, 16, 19, 20], "legend": [9, 13, 16, 19, 20], "predict": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30], "new": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 41, 43], "propog": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25], "them": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 41, 43, 44], "next": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 43, 44], "meth": [9, 13], "avail": [9, 13, 43, 44], "so": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 43, 44], "thei": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 43], "restor": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "later": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 43], "properti": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "read": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 43], "warn": [9, 13, 16, 20, 29], "expect": [9, 13, 43], "num_birth_term": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "metric": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "prob_death": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "compliment": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "randomfinitsetbas": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "prob_miss_detect": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "randomfinitesetbas": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "gsm": [10, 11], "glmb": [10, 12, 14, 17, 22, 23, 24, 30], "fitler": [10, 11], "chang": [10, 11, 43, 44], "qkf": [10, 11], "sqkf": [10, 11], "ukf": [10, 11], "etc": [10, 11], "calculate_ospa2": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25], "win_len": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25], "manhattan": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25], "sampl": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25], "includ": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25, 29, 43], "window": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25, 43, 44], "even": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25, 29, 43], "three": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25, 43], "disabl": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25], "ensur": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25, 43, 44], "counter": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25], "increment": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25, 44], "mea": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25], "nm": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25], "measuremnt": [10, 11, 12, 14, 15, 17, 19, 24, 25], "todo": [10, 12, 14, 24], "fix": [10, 11, 12, 14, 15, 16, 17, 18, 20, 24, 25, 43], "extract_most_prob_st": [10, 11, 12, 14, 15, 17, 18, 22, 23, 24, 25], "thresh": [10, 11, 12, 14, 15, 17, 18, 22, 23, 24, 25], "most": [10, 11, 12, 14, 15, 17, 18, 24, 25, 38, 39, 43, 44], "up": [10, 11, 12, 14, 15, 17, 18, 24, 25, 41, 44], "minimum": [10, 11, 12, 14, 15, 17, 18, 24, 25], "state_set": [10, 11, 12, 14, 15, 17, 18, 24, 25], "normal": [10, 11, 12, 14, 15, 17, 18, 24, 25, 41, 43, 44], "label_set": [10, 11, 12, 14, 15, 17, 18, 24, 25], "cov_set": [10, 11, 12, 14, 15, 17, 18, 24, 25], "prob": [10, 11, 12, 14, 15, 17, 18, 24, 25], "calc_stat": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25], "both": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25, 43], "those": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25, 43, 44], "done": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25, 44], "befor": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25, 44], "simpli": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25, 42, 44], "simul": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25], "idx_cmp": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25], "tabl": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25], "keywrod": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25], "plot_ospa2_histori": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25], "ospa2": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25], "plot_states_label": [10, 11, 12, 14, 15, 17, 18, 22, 23, 24, 25], "meas_tx_fnc": [10, 11, 12, 14, 15, 17, 18, 22, 23, 24, 25], "take": [10, 11, 12, 14, 15, 17, 18, 22, 23, 24, 25, 43], "size": [10, 11, 12, 14, 15, 17, 18, 22, 23, 24, 25, 38, 39, 46], "pickl": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25], "result": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25, 42, 43], "dill": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25], "mai": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25, 29, 41, 43, 44], "potenti": [10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25], "dynam": [10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 43, 46], "bayesfilt": [10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25], "jointgeneralizedlabeledmultibernoulli": [11, 15, 18, 23, 25], "jglmb": [11, 15, 17, 18, 23, 25], "becaus": [11, 15, 16, 17, 18, 20, 25, 43, 44], "req_birth": 12, "req_surv": 12, "req_upd": [12, 19], "gating_on": [12, 19, 20], "prune_threshold": [12, 19, 20], "15": [12, 19, 43, 46], "max_hyp": [12, 19], "3000": [12, 19], "decimal_plac": [12, 19], "save_measur": [12, 19], "delta": 12, "account": [12, 17, 22], "exist": [12, 17, 22, 44], "request": 12, "where": [12, 43, 44], "second": [12, 41], "keep": [12, 19, 21, 43], "decim": 12, "place": [12, 43, 44], "some": [12, 43, 44, 45, 46], "_immphdbas": [13, 16], "cardinalizedphd": 13, "_immglmbbas": [14, 15], "imm": [14, 15], "phd": [16, 20], "joint": 17, "simultan": [17, 43], "asynchron": 17, "caus": [17, 29, 41, 43], "poor": 17, "sensor": [18, 39], "exist_threshold": 19, "enable_bern_prun": 19, "pmbm": 19, "abstract": [19, 21], "overridden": [19, 21], "inherit": [19, 21], "extract_threshold": 20, "05": 20, "merge_threshold": 20, "max_gauss": 20, "100": 20, "squar": [20, 21], "test": [20, 29, 41, 42, 44], "remov": [20, 43, 44], "clutter_dens": 21, "dure": 21, "manual": 21, "ospa_loc": 21, "ospa_cardin": 21, "kei": [21, 43], "signatur": 21, "implemen": 21, "would": [21, 43, 44], "origin": [21, 29, 30, 31, 32, 43], "load": 21, "setup": [21, 41, 42], "_smcglmbbase": [22, 23], "sequenti": [22, 41], "mont": [22, 38, 39], "carlo": [22, 38, 39], "compute_prob_detect": [22, 23], "particl": 22, "compute_prob_surv": [22, 23], "averag": 22, "prob_det_arg": [22, 23], "smc": [22, 23], "detail": [22, 23, 43], "themost": [22, 23], "prob_surv_arg": [22, 23], "_stmglmbbase": [24, 25], "stm": [24, 25], "other": [26, 29, 41, 43], "search": [27, 33, 42], "maze": [28, 34, 36], "param": 28, "ncm": 29, "src": 29, "dst": 29, "bellman": [29, 30], "ford": [29, 30], "moor": [29, 30], "shortest": [29, 30], "port": [29, 30, 31, 32, 35], "comment": [29, 30, 31, 32, 44], "copyright": [29, 43], "2012": 29, "derek": [29, 30], "o": [29, 30, 46], "connor": [29, 30], "reserv": 29, "redistribut": [29, 43], "binari": 29, "without": [29, 43, 44], "permit": [29, 43], "provid": [29, 30, 43, 44, 45], "condit": [29, 43], "met": [29, 43], "retain": [29, 43], "abov": [29, 43], "notic": [29, 43], "disclaim": [29, 43], "reproduc": 29, "document": [29, 40, 41, 43, 44], "materi": [29, 43], "softwar": [29, 43], "BY": [29, 43], "THE": [29, 43], "holder": [29, 43], "AND": [29, 43], "contributor": [29, 43], "AS": [29, 43], "express": [29, 43], "OR": [29, 43], "warranti": [29, 43], "BUT": [29, 43], "NOT": [29, 41, 43], "limit": [29, 43], "TO": [29, 43], "OF": [29, 43], "merchant": [29, 43], "fit": [29, 43], "FOR": [29, 43], "particular": [29, 43], "purpos": [29, 43], "IN": [29, 43], "NO": [29, 43], "event": [29, 41, 43], "shall": [29, 43], "owner": 29, "BE": [29, 43], "liabl": [29, 43], "direct": [29, 38, 39, 43], "indirect": 29, "incident": [29, 43], "special": [29, 43], "exemplari": 29, "consequenti": [29, 43], "damag": [29, 43], "procur": [29, 43], "substitut": 29, "good": 29, "servic": [29, 43], "loss": [29, 43], "profit": 29, "busi": [29, 43], "interrupt": 29, "howev": [29, 43, 44], "ON": 29, "theori": 29, "liabil": [29, 43], "whether": [29, 43], "contract": 29, "strict": 29, "tort": 29, "neglig": 29, "otherwis": [29, 43], "aris": [29, 43], "wai": [29, 43], "out": [29, 43, 46], "IF": [29, 43], "advis": [29, 43], "SUCH": [29, 43], "basic": [29, 43, 46], "spars": 29, "adjac": 29, "ab": 29, "nnz": 29, "construct": [29, 38, 39], "tree": 29, "root": [29, 44], "r": [29, 42, 46], "pointer": [29, 43], "along": [29, 43], "length": 29, "complex": 29, "mn": 29, "19": 29, "jan": 29, "sep": 29, "derekroconnor": 29, "eircom": 29, "net": 29, "unlik": 29, "bfm": 29, "sp": 29, "greatli": 29, "reduc": 29, "sprand": 29, "long": [29, 43], "tic": 29, "bfmspathot": 29, "toc": 29, "badli": 29, "real": 29, "problem": [29, 31, 32, 43], "destin": 29, "dist": [29, 46], "pred": 29, "log_cost_in": 30, "implent": 30, "meral": 30, "shirazipour": 30, "yen": 30, "1971": 30, "slightli": 30, "dijkstra": 30, "xiaodong": 30, "wang": 30, "2004": 30, "bt": 30, "replac": [30, 44], "neg": [30, 46], "entri": [30, 38, 39], "matric": 30, "cycl": 30, "netcostmatrix": 30, "inf": 30, "absenc": [30, 43], "link": [30, 43], "cost_mat": [31, 32], "murti": [31, 32, 35], "rank": [31, 32], "2015": [31, 32], "matlab": [31, 32], "zero": [31, 32, 46], "helper": 33, "graph": 33, "longer": 33, "node": 34, "pathfind": 34, "h": 34, "heurist": 34, "f": [34, 43], "present": [34, 43], "cartesian": 34, "coordin": 34, "dist_mat_in": 35, "current_nod": 36, "in_cost": [38, 39], "num_it": [38, 39], "sampler": [38, 39], "computation": [38, 39], "metropoli": [38, 39], "hast": [38, 39], "markov": [38, 39], "chain": [38, 39], "multivari": [38, 39], "difficult": [38, 39], "select": [38, 39], "histogram": [38, 39], "randomli": [38, 39], "bin": [38, 39], "default_rng": [38, 39], "uniqu": [38, 39], "minim": 39, "markovian": 39, "gibb": 39, "below": [40, 43], "caser": [40, 44, 46], "goal": 41, "continu": [41, 43, 46], "integr": 41, "constantli": [41, 43], "check": [41, 44], "upon": 41, "everi": [41, 43], "push": 41, "repo": [41, 44], "project": [41, 44], "make": [41, 43, 44], "achiev": [41, 43], "technologi": 41, "travi": 41, "jenkin": 41, "workflow": [41, 42], "anoth": 41, "autom": [41, 44], "releas": [41, 43], "version": [41, 43, 44], "oper": [41, 43], "fail": [41, 43], "you": [41, 43, 44], "look": 41, "log": 41, "case": [41, 43], "tag": 41, "build": [41, 44], "publish": [41, 43], "registri": 41, "gh": 41, "page": [41, 42, 44], "branch": 41, "websit": 41, "add": [41, 43, 46], "commit": [41, 43, 44], "messag": 41, "summar": 41, "sinc": 41, "last": 41, "defin": [41, 43, 44, 46], "yml": 41, "These": [41, 43, 44], "yaml": 41, "syntax": 41, "job": 41, "parallel": 41, "sequenc": 41, "trigger": 41, "execut": [41, 43], "happen": 41, "remot": 41, "your": [41, 43, 44], "git": [41, 44], "won": 41, "now": [41, 44], "addition": [41, 44], "server": [41, 43], "machin": [41, 43, 44], "fresh": 41, "clean": 41, "diretori": 41, "runner": 41, "made": [41, 43], "either": [41, 43], "termin": [41, 43, 44], "predefin": 41, "typicali": 41, "checkout": 41, "wherea": 41, "themselv": 41, "give": [41, 43, 46], "id": 41, "api": [42, 44], "usag": 42, "exampl": [42, 43, 45], "toolchain": 42, "environ": 42, "tox": 42, "ci": 42, "cd": 42, "pipelin": 42, "github": 42, "action": [42, 43], "quick": 42, "guid": 42, "coverag": [42, 43, 44], "homepag": 42, "licens": 42, "gnc": 42, "ua": 42, "To": [42, 43, 44], "pip": 42, "instal": [42, 43, 44], "pleas": [42, 43], "framework": 42, "misc": 42, "author": [42, 43], "vaughn": 42, "weiren": 42, "vincent": 42, "hill": 42, "howpublish": 42, "web": [42, 44], "ython": 42, "librari": [42, 43, 44], "ommand": 42, "utonom": 42, "warm": 42, "mploi": 42, "andom": 42, "year": [42, 43], "2019": 42, "url": 42, "http": [42, 43], "com": 42, "drjdlarson": 42, "gnu": 43, "public": 43, "29": 43, "june": 43, "free": 43, "foundat": 43, "inc": 43, "fsf": 43, "org": 43, "everyon": 43, "copi": 43, "verbatim": 43, "preambl": 43, "copyleft": 43, "kind": 43, "work": 43, "practic": 43, "awai": 43, "freedom": 43, "share": 43, "By": 43, "contrast": 43, "intend": 43, "guarante": 43, "program": 43, "sure": [43, 44], "remain": 43, "its": 43, "user": 43, "we": 43, "our": 43, "too": 43, "speak": 43, "price": 43, "charg": 43, "wish": 43, "receiv": 43, "want": 43, "piec": 43, "know": 43, "do": [43, 44], "thing": 43, "protect": 43, "prevent": 43, "deni": 43, "ask": 43, "surrend": 43, "therefor": 43, "certain": 43, "respons": 43, "respect": 43, "grati": 43, "fee": 43, "recipi": 43, "And": 43, "show": 43, "gpl": 43, "assert": 43, "offer": 43, "legal": 43, "permiss": 43, "clearli": 43, "explain": 43, "sake": 43, "mark": [43, 44], "erron": 43, "previou": 43, "devic": 43, "access": [43, 44], "insid": 43, "although": 43, "manufactur": 43, "fundament": 43, "incompat": 43, "aim": 43, "systemat": 43, "pattern": [43, 45], "abus": 43, "occur": 43, "area": 43, "product": 43, "individu": 43, "precis": 43, "unaccept": 43, "prohibit": 43, "substanti": 43, "domain": 43, "stand": 43, "readi": 43, "provis": 43, "futur": 43, "threaten": 43, "patent": 43, "restrict": 43, "avoid": [43, 46], "danger": 43, "could": 43, "effect": 43, "proprietari": 43, "assur": 43, "cannot": 43, "render": 43, "definit": 43, "law": 43, "semiconductor": 43, "mask": 43, "under": 43, "license": 43, "address": [43, 44], "organ": 43, "adapt": 43, "fashion": 43, "than": 43, "exact": 43, "earlier": 43, "cover": 43, "unmodifi": 43, "propag": 43, "anyth": 43, "secondarili": 43, "infring": 43, "applic": 43, "except": [43, 44], "privat": 43, "countri": 43, "activ": 43, "convei": 43, "parti": 43, "mere": 43, "interact": 43, "transfer": 43, "interfac": 43, "displai": 43, "appropri": 43, "extent": 43, "conveni": 43, "promin": 43, "visibl": 43, "featur": 43, "tell": 43, "view": [43, 44], "menu": 43, "item": [43, 46], "meet": 43, "criterion": 43, "prefer": 43, "offici": 43, "recogn": 43, "bodi": 43, "languag": 43, "wide": 43, "among": 43, "whole": 43, "major": [43, 44], "serv": 43, "context": 43, "essenti": 43, "kernel": 43, "specif": [43, 44], "compil": [43, 44], "produc": 43, "interpret": 43, "script": 43, "tool": [43, 44], "subprogram": 43, "intim": 43, "commun": 43, "flow": 43, "regener": 43, "grant": 43, "irrevoc": 43, "explicitli": 43, "affirm": 43, "unlimit": 43, "content": 43, "constitut": 43, "acknowledg": 43, "fair": 43, "equival": 43, "forc": 43, "sole": 43, "exclus": 43, "facil": 43, "compli": 43, "thu": 43, "behalf": 43, "outsid": 43, "relationship": 43, "circumst": 43, "sublicens": 43, "section": 43, "unnecessari": 43, "anti": 43, "circumvent": 43, "No": 43, "deem": 43, "technolog": 43, "fulfil": 43, "oblig": 43, "articl": 43, "wipo": 43, "treati": 43, "adopt": 43, "decemb": 43, "1996": 43, "similar": 43, "waiv": 43, "forbid": 43, "exercis": 43, "intent": 43, "enforc": 43, "against": 43, "third": 43, "medium": 43, "conspicu": 43, "intact": 43, "support": 43, "carri": 43, "relev": 43, "date": 43, "entir": 43, "anyon": 43, "who": 43, "come": 43, "possess": 43, "regardless": 43, "invalid": 43, "independ": 43, "natur": 43, "extens": [43, 44], "combin": 43, "larger": 43, "volum": [43, 44], "storag": 43, "aggreg": 43, "beyond": 43, "what": 43, "readabl": 43, "embodi": 43, "physic": 43, "accompani": 43, "durabl": 43, "customarili": 43, "interchang": 43, "written": 43, "valid": [43, 44], "least": 43, "spare": 43, "custom": 43, "reason": 43, "altern": 43, "occasion": 43, "noncommerci": 43, "subsect": 43, "6b": 43, "further": 43, "maintain": 43, "clear": 43, "sai": 43, "host": 43, "satisfi": 43, "peer": 43, "transmiss": 43, "6d": 43, "portion": 43, "whose": 43, "exclud": 43, "consum": 43, "tangibl": 43, "person": 43, "famili": 43, "household": 43, "sold": 43, "incorpor": 43, "dwell": 43, "doubt": 43, "resolv": 43, "favor": 43, "common": 43, "statu": 43, "actual": 43, "commerci": 43, "industri": 43, "unless": 43, "signific": 43, "mode": 43, "procedur": 43, "suffic": 43, "interf": 43, "perpetu": 43, "character": 43, "But": 43, "neither": 43, "nor": 43, "abil": 43, "rom": 43, "itself": 43, "advers": 43, "affect": 43, "violat": 43, "rule": 43, "protocol": 43, "across": 43, "publicli": 43, "password": 43, "unpack": 43, "supplement": 43, "treat": 43, "though": 43, "were": 43, "govern": 43, "regard": 43, "own": 43, "notwithstand": 43, "16": 43, "preserv": 43, "misrepresent": 43, "licensor": 43, "declin": 43, "trademark": 43, "trade": 43, "indemnif": 43, "contractu": 43, "assumpt": 43, "impos": 43, "relicens": 43, "statement": 43, "expressli": 43, "attempt": [43, 44], "void": 43, "paragraph": 43, "ceas": 43, "reinstat": 43, "provision": 43, "until": 43, "perman": 43, "notifi": 43, "60": 43, "dai": 43, "cessat": 43, "moreov": 43, "cure": 43, "30": 43, "receipt": 43, "qualifi": 43, "accept": 43, "Not": 43, "ancillari": 43, "consequ": 43, "likewis": 43, "noth": 43, "downstream": 43, "subject": 43, "complianc": 43, "entiti": 43, "asset": 43, "subdivid": 43, "whatev": 43, "predecessor": 43, "interest": 43, "had": 43, "effort": 43, "royalti": 43, "litig": 43, "cross": 43, "claim": 43, "counterclaim": 43, "lawsuit": 43, "alleg": 43, "sell": 43, "sale": 43, "import": [43, 46], "alreadi": 43, "acquir": 43, "hereaft": 43, "manner": 43, "worldwid": 43, "agreement": 43, "denomin": 43, "coven": 43, "sue": 43, "knowingli": 43, "reli": 43, "readili": 43, "arrang": 43, "depriv": 43, "yourself": 43, "benefit": 43, "knowledg": 43, "identifi": 43, "believ": 43, "pursuant": 43, "connect": [43, 44], "convey": 43, "discriminatori": 43, "scope": 43, "payment": 43, "primarili": 43, "enter": 43, "28": 43, "march": 43, "constru": 43, "defens": 43, "12": 43, "court": 43, "contradict": 43, "excus": 43, "pertin": 43, "agre": 43, "collect": 43, "whom": 43, "refrain": 43, "affero": 43, "concern": 43, "14": 43, "revis": 43, "Such": 43, "spirit": 43, "distinguish": 43, "choos": 43, "ever": 43, "proxi": 43, "decid": 43, "THERE": 43, "write": 43, "risk": 43, "qualiti": 43, "WITH": 43, "prove": 43, "defect": 43, "necessari": 43, "repair": 43, "WILL": 43, "inabl": 43, "BEING": 43, "inaccur": 43, "sustain": 43, "failur": 43, "17": 43, "close": 43, "approxim": 43, "absolut": 43, "waiver": 43, "civil": 43, "greatest": 43, "attach": 43, "safest": 43, "line": 43, "found": [43, 44], "brief": 43, "idea": 43, "hope": 43, "www": 43, "contact": 43, "electron": 43, "paper": 43, "mail": 43, "short": 43, "welcom": 43, "hypothet": 43, "Of": 43, "cours": 43, "might": 43, "gui": 43, "box": [43, 46], "employ": 43, "programm": 43, "school": 43, "sign": [43, 46], "subroutin": 43, "lesser": 43, "why": 43, "lgpl": 43, "html": [43, 44], "pytest": 44, "summari": 44, "sphinx": 44, "black": 44, "formatt": 44, "auto": 44, "semant": 44, "break": 44, "prebuilt": 44, "docker": 44, "v": 44, "dev": 44, "edit": 44, "capabl": 44, "overview": 44, "eas": 44, "mac": 44, "linux": 44, "clone": 44, "repositori": 44, "subsystem": 44, "directori": 44, "home": 44, "folder": 44, "browser": 44, "wsl": 44, "bar": 44, "click": 44, "distro": 44, "open": 44, "Then": 44, "prompt": 44, "ye": 44, "go": [44, 46], "palett": 44, "button": 44, "ie": 44, "just": 44, "slow": 44, "skip": 44, "help": 44, "pull": 44, "correctli": 44, "clean_doc": 44, "docs_html": 44, "documen": 44, "doc": 44, "virtual": 44, "depend": 44, "ini": 44, "envrion": 44, "av": 44, "env": 44, "runslow": 44, "py39": 44, "validation_test": 44, "live": 44, "obstacl": 45, "leverag": 46, "formul": 46, "def": 46, "modify_quadrat": 46, "np": 46, "smodel": 46, "gcontrol": 46, "irobotcr": 46, "d2r": 46, "pi": 46, "180": 46, "dt": 46, "01": 46, "time_horizon": 46, "90": 46, "reshap": 46, "add_compon": 46, "25": 46, "diag": 46, "nomin": 46, "u_nom": 46, "irobot": 46, "dynobj": 46, "wheel_separ": 46, "258": 46, "335": 46, "q": 46, "1500": 46, "ey": 46, "itr": 46, "rot_cost": 46, "obect": 46, "set_state_model": 46, "state_trajectori": 46, "control_sign": 46, "elqr_ospa": 46, "elqrospa": 46, "start_stat": 46, "pos_ind": 46, "elqr_ospa_obstacl": 46, "pyplot": 46, "plt": 46, "patch": 46, "gplot": 46, "150": 46, "120": 46, "75": 46, "quad": 46, "circular": 46, "center": 46, "po": 46, "35": 46, "95": 46, "sqrt": 46, "enviorn": 46, "bound": 46, "robot": 46, "bottom_left": 46, "top_right": 46, "obs_factor": 46, "scale_factor": 46, "non_quadratic_cost": 46, "ctrl_input": 46, "is_initi": 46, "is_fin": 46, "_obstacl": 46, "_obs_factor": 46, "_scale_factor": 46, "_bottom_left": 46, "_top_right": 46, "ob": 46, "diff": 46, "ravel": 46, "sum": 46, "signed_dist": 46, "exp": 46, "ii": 46, "enumer": 46, "shape": 46, "add_subplot": 46, "ax": 46, "set_aspect": 46, "equal": 46, "adjust": 46, "set_xlim": 46, "set_ylim": 46, "c_ind": 46, "scatter": 46, "zorder": 46, "add_patch": 46, "set_title_label": 46}, "objects": {"": [[1, 0, 0, "-", "caser"]], "caser": [[2, 0, 0, "-", "guidance"], [6, 0, 0, "-", "swarm_estimator"], [26, 0, 0, "-", "utilities"]], "caser.guidance": [[3, 1, 1, "", "ELQR"], [4, 1, 1, "", "ELQROSPA"], [5, 4, 1, "", "gaussian_density_cost"]], "caser.guidance.ELQR": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "find_end_state"], [3, 2, 1, "", "gen_final_traj"], [3, 2, 1, "", "get_state_dist"], [3, 2, 1, "", "init_elqr_lst"], [3, 3, 1, "", "max_iters"], [3, 2, 1, "", "non_quad_fun_factory"], [3, 2, 1, "", "plan"], [3, 2, 1, "", "set_control_model"], [3, 2, 1, "", "set_cost_model"], [3, 2, 1, "", "targets_to_wayareas"], [3, 3, 1, "", "tol"]], "caser.guidance.ELQROSPA": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "find_end_state"], [4, 2, 1, "", "gen_final_traj"], [4, 2, 1, "", "get_state_dist"], [4, 2, 1, "", "init_elqr_lst"], [4, 2, 1, "", "non_quad_fun_factory"], [4, 2, 1, "", "plan"], [4, 2, 1, "", "set_control_model"], [4, 2, 1, "", "set_cost_model"], [4, 2, 1, "", "targets_to_wayareas"]], "caser.swarm_estimator": [[7, 0, 0, "-", "slam"], [8, 0, 0, "-", "tracker"]], "caser.swarm_estimator.tracker": [[9, 1, 1, "", "CardinalizedPHD"], [10, 1, 1, "", "GSMGeneralizedLabeledMultiBernoulli"], [11, 1, 1, "", "GSMJointGeneralizedLabeledMultiBernoulli"], [12, 1, 1, "", "GeneralizedLabeledMultiBernoulli"], [13, 1, 1, "", "IMMCardinalizedPHD"], [14, 1, 1, "", "IMMGeneralizedLabeledMultiBernoulli"], [15, 1, 1, "", "IMMJointGeneralizedLabeledMultiBernoulli"], [16, 1, 1, "", "IMMProbabilityHypothesisDensity"], [17, 1, 1, "", "JointGeneralizedLabeledMultiBernoulli"], [18, 1, 1, "", "MSJointGeneralizedLabeledMultiBernoulli"], [19, 1, 1, "", "PoissonMultiBernoulliMixture"], [20, 1, 1, "", "ProbabilityHypothesisDensity"], [21, 1, 1, "", "RandomFiniteSetBase"], [22, 1, 1, "", "SMCGeneralizedLabeledMultiBernoulli"], [23, 1, 1, "", "SMCJointGeneralizedLabeledMultiBernoulli"], [24, 1, 1, "", "STMGeneralizedLabeledMultiBernoulli"], [25, 1, 1, "", "STMJointGeneralizedLabeledMultiBernoulli"]], "caser.swarm_estimator.tracker.CardinalizedPHD": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "agents_per_state"], [9, 2, 1, "", "animate_state_plot"], [9, 2, 1, "", "calculate_ospa"], [9, 5, 1, "", "cardinality"], [9, 2, 1, "", "cleanup"], [9, 2, 1, "", "correct"], [9, 5, 1, "", "covariances"], [9, 2, 1, "", "extract_states"], [9, 3, 1, "", "filt_state"], [9, 2, 1, "", "load_filter_state"], [9, 5, 1, "", "max_expected_card"], [9, 5, 1, "", "num_birth_terms"], [9, 5, 1, "", "ospa_method"], [9, 2, 1, "", "plot_card_dist"], [9, 2, 1, "", "plot_card_history"], [9, 2, 1, "", "plot_number_states_per_time"], [9, 2, 1, "", "plot_ospa_history"], [9, 2, 1, "", "plot_states"], [9, 2, 1, "", "predict"], [9, 5, 1, "", "prob_death"], [9, 5, 1, "", "prob_miss_detection"], [9, 2, 1, "", "save_filter_state"], [9, 5, 1, "", "states"]], "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "calculate_ospa"], [10, 2, 1, "", "calculate_ospa2"], [10, 5, 1, "", "cardinality"], [10, 2, 1, "", "cleanup"], [10, 2, 1, "", "correct"], [10, 5, 1, "", "covariances"], [10, 2, 1, "", "extract_most_prob_states"], [10, 2, 1, "", "extract_states"], [10, 3, 1, "", "filt_state"], [10, 5, 1, "", "filter"], [10, 5, 1, "", "labels"], [10, 2, 1, "", "load_filter_state"], [10, 5, 1, "", "num_birth_terms"], [10, 5, 1, "", "ospa_method"], [10, 2, 1, "", "plot_card_dist"], [10, 2, 1, "", "plot_card_history"], [10, 2, 1, "", "plot_ospa2_history"], [10, 2, 1, "", "plot_ospa_history"], [10, 2, 1, "", "plot_states_labels"], [10, 2, 1, "", "predict"], [10, 5, 1, "", "prob_death"], [10, 5, 1, "", "prob_miss_detection"], [10, 2, 1, "", "save_filter_state"], [10, 5, 1, "", "states"]], "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "calculate_ospa"], [11, 2, 1, "", "calculate_ospa2"], [11, 5, 1, "", "cardinality"], [11, 2, 1, "", "cleanup"], [11, 2, 1, "", "correct"], [11, 5, 1, "", "covariances"], [11, 2, 1, "", "extract_most_prob_states"], [11, 2, 1, "", "extract_states"], [11, 3, 1, "", "filt_state"], [11, 5, 1, "", "filter"], [11, 5, 1, "", "labels"], [11, 2, 1, "", "load_filter_state"], [11, 5, 1, "", "num_birth_terms"], [11, 5, 1, "", "ospa_method"], [11, 2, 1, "", "plot_card_dist"], [11, 2, 1, "", "plot_card_history"], [11, 2, 1, "", "plot_ospa2_history"], [11, 2, 1, "", "plot_ospa_history"], [11, 2, 1, "", "plot_states_labels"], [11, 2, 1, "", "predict"], [11, 5, 1, "", "prob_death"], [11, 5, 1, "", "prob_miss_detection"], [11, 2, 1, "", "save_filter_state"], [11, 5, 1, "", "states"]], "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "birth_terms"], [12, 2, 1, "", "calculate_ospa"], [12, 2, 1, "", "calculate_ospa2"], [12, 5, 1, "", "cardinality"], [12, 2, 1, "", "cleanup"], [12, 2, 1, "", "correct"], [12, 5, 1, "", "covariances"], [12, 3, 1, "", "decimal_places"], [12, 2, 1, "", "extract_most_prob_states"], [12, 2, 1, "", "extract_states"], [12, 3, 1, "", "filt_state"], [12, 5, 1, "", "filter"], [12, 3, 1, "", "gating_on"], [12, 5, 1, "", "labels"], [12, 2, 1, "", "load_filter_state"], [12, 3, 1, "", "max_hyps"], [12, 5, 1, "", "num_birth_terms"], [12, 5, 1, "", "ospa_method"], [12, 2, 1, "", "plot_card_dist"], [12, 2, 1, "", "plot_card_history"], [12, 2, 1, "", "plot_ospa2_history"], [12, 2, 1, "", "plot_ospa_history"], [12, 2, 1, "", "plot_states_labels"], [12, 2, 1, "", "predict"], [12, 5, 1, "", "prob_death"], [12, 5, 1, "", "prob_miss_detection"], [12, 3, 1, "", "prune_threshold"], [12, 3, 1, "", "req_births"], [12, 3, 1, "", "req_surv"], [12, 3, 1, "", "req_upd"], [12, 2, 1, "", "save_filter_state"], [12, 3, 1, "", "save_measurements"], [12, 5, 1, "", "states"]], "caser.swarm_estimator.tracker.IMMCardinalizedPHD": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "animate_state_plot"], [13, 2, 1, "", "calculate_ospa"], [13, 5, 1, "", "cardinality"], [13, 2, 1, "", "cleanup"], [13, 2, 1, "", "correct"], [13, 5, 1, "", "covariances"], [13, 2, 1, "", "extract_states"], [13, 3, 1, "", "filt_state"], [13, 2, 1, "", "load_filter_state"], [13, 5, 1, "", "max_expected_card"], [13, 5, 1, "", "num_birth_terms"], [13, 5, 1, "", "ospa_method"], [13, 2, 1, "", "plot_card_dist"], [13, 2, 1, "", "plot_card_history"], [13, 2, 1, "", "plot_number_states_per_time"], [13, 2, 1, "", "plot_ospa_history"], [13, 2, 1, "", "plot_states"], [13, 2, 1, "", "predict"], [13, 5, 1, "", "prob_death"], [13, 5, 1, "", "prob_miss_detection"], [13, 2, 1, "", "save_filter_state"], [13, 5, 1, "", "states"]], "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "calculate_ospa"], [14, 2, 1, "", "calculate_ospa2"], [14, 5, 1, "", "cardinality"], [14, 2, 1, "", "cleanup"], [14, 2, 1, "", "correct"], [14, 5, 1, "", "covariances"], [14, 2, 1, "", "extract_most_prob_states"], [14, 2, 1, "", "extract_states"], [14, 3, 1, "", "filt_state"], [14, 5, 1, "", "filter"], [14, 5, 1, "", "labels"], [14, 2, 1, "", "load_filter_state"], [14, 5, 1, "", "num_birth_terms"], [14, 5, 1, "", "ospa_method"], [14, 2, 1, "", "plot_card_dist"], [14, 2, 1, "", "plot_card_history"], [14, 2, 1, "", "plot_ospa2_history"], [14, 2, 1, "", "plot_ospa_history"], [14, 2, 1, "", "plot_states_labels"], [14, 2, 1, "", "predict"], [14, 5, 1, "", "prob_death"], [14, 5, 1, "", "prob_miss_detection"], [14, 2, 1, "", "save_filter_state"], [14, 5, 1, "", "states"]], "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "calculate_ospa"], [15, 2, 1, "", "calculate_ospa2"], [15, 5, 1, "", "cardinality"], [15, 2, 1, "", "cleanup"], [15, 2, 1, "", "correct"], [15, 5, 1, "", "covariances"], [15, 2, 1, "", "extract_most_prob_states"], [15, 2, 1, "", "extract_states"], [15, 3, 1, "", "filt_state"], [15, 5, 1, "", "filter"], [15, 5, 1, "", "labels"], [15, 2, 1, "", "load_filter_state"], [15, 5, 1, "", "num_birth_terms"], [15, 5, 1, "", "ospa_method"], [15, 2, 1, "", "plot_card_dist"], [15, 2, 1, "", "plot_card_history"], [15, 2, 1, "", "plot_ospa2_history"], [15, 2, 1, "", "plot_ospa_history"], [15, 2, 1, "", "plot_states_labels"], [15, 2, 1, "", "predict"], [15, 5, 1, "", "prob_death"], [15, 5, 1, "", "prob_miss_detection"], [15, 2, 1, "", "save_filter_state"], [15, 5, 1, "", "states"]], "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "animate_state_plot"], [16, 2, 1, "", "calculate_ospa"], [16, 5, 1, "", "cardinality"], [16, 2, 1, "", "cleanup"], [16, 2, 1, "", "correct"], [16, 5, 1, "", "covariances"], [16, 2, 1, "", "extract_states"], [16, 3, 1, "", "filt_state"], [16, 2, 1, "", "load_filter_state"], [16, 5, 1, "", "num_birth_terms"], [16, 5, 1, "", "ospa_method"], [16, 2, 1, "", "plot_ospa_history"], [16, 2, 1, "", "plot_states"], [16, 2, 1, "", "predict"], [16, 5, 1, "", "prob_death"], [16, 5, 1, "", "prob_miss_detection"], [16, 2, 1, "", "save_filter_state"], [16, 5, 1, "", "states"]], "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "calculate_ospa"], [17, 2, 1, "", "calculate_ospa2"], [17, 5, 1, "", "cardinality"], [17, 2, 1, "", "cleanup"], [17, 2, 1, "", "correct"], [17, 5, 1, "", "covariances"], [17, 2, 1, "", "extract_most_prob_states"], [17, 2, 1, "", "extract_states"], [17, 3, 1, "", "filt_state"], [17, 5, 1, "", "filter"], [17, 5, 1, "", "labels"], [17, 2, 1, "", "load_filter_state"], [17, 5, 1, "", "num_birth_terms"], [17, 5, 1, "", "ospa_method"], [17, 2, 1, "", "plot_card_dist"], [17, 2, 1, "", "plot_card_history"], [17, 2, 1, "", "plot_ospa2_history"], [17, 2, 1, "", "plot_ospa_history"], [17, 2, 1, "", "plot_states_labels"], [17, 2, 1, "", "predict"], [17, 5, 1, "", "prob_death"], [17, 5, 1, "", "prob_miss_detection"], [17, 2, 1, "", "save_filter_state"], [17, 5, 1, "", "states"]], "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "calculate_ospa"], [18, 2, 1, "", "calculate_ospa2"], [18, 5, 1, "", "cardinality"], [18, 2, 1, "", "cleanup"], [18, 2, 1, "", "correct"], [18, 5, 1, "", "covariances"], [18, 2, 1, "", "extract_most_prob_states"], [18, 2, 1, "", "extract_states"], [18, 3, 1, "", "filt_state"], [18, 5, 1, "", "filter"], [18, 5, 1, "", "labels"], [18, 2, 1, "", "load_filter_state"], [18, 5, 1, "", "num_birth_terms"], [18, 5, 1, "", "ospa_method"], [18, 2, 1, "", "plot_card_dist"], [18, 2, 1, "", "plot_card_history"], [18, 2, 1, "", "plot_ospa2_history"], [18, 2, 1, "", "plot_ospa_history"], [18, 2, 1, "", "plot_states_labels"], [18, 2, 1, "", "predict"], [18, 5, 1, "", "prob_death"], [18, 5, 1, "", "prob_miss_detection"], [18, 2, 1, "", "save_filter_state"], [18, 5, 1, "", "states"]], "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "calculate_ospa"], [19, 2, 1, "", "calculate_ospa2"], [19, 5, 1, "", "cardinality"], [19, 2, 1, "", "cleanup"], [19, 2, 1, "", "correct"], [19, 5, 1, "", "covariances"], [19, 2, 1, "", "extract_states"], [19, 3, 1, "", "filt_state"], [19, 5, 1, "", "filter"], [19, 2, 1, "", "load_filter_state"], [19, 5, 1, "", "num_birth_terms"], [19, 5, 1, "", "ospa_method"], [19, 2, 1, "", "plot_card_dist"], [19, 2, 1, "", "plot_card_history"], [19, 2, 1, "", "plot_ospa2_history"], [19, 2, 1, "", "plot_ospa_history"], [19, 2, 1, "", "plot_states"], [19, 2, 1, "", "predict"], [19, 5, 1, "", "prob_death"], [19, 5, 1, "", "prob_miss_detection"], [19, 2, 1, "", "save_filter_state"], [19, 5, 1, "", "states"]], "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "animate_state_plot"], [20, 2, 1, "", "calculate_ospa"], [20, 5, 1, "", "cardinality"], [20, 2, 1, "", "cleanup"], [20, 2, 1, "", "correct"], [20, 5, 1, "", "covariances"], [20, 2, 1, "", "extract_states"], [20, 3, 1, "", "extract_threshold"], [20, 3, 1, "", "filt_state"], [20, 3, 1, "", "gating_on"], [20, 3, 1, "", "inv_chi2_gate"], [20, 2, 1, "", "load_filter_state"], [20, 3, 1, "", "max_gauss"], [20, 3, 1, "", "merge_threshold"], [20, 5, 1, "", "num_birth_terms"], [20, 5, 1, "", "ospa_method"], [20, 2, 1, "", "plot_ospa_history"], [20, 2, 1, "", "plot_states"], [20, 2, 1, "", "predict"], [20, 5, 1, "", "prob_death"], [20, 5, 1, "", "prob_miss_detection"], [20, 3, 1, "", "prune_threshold"], [20, 2, 1, "", "save_filter_state"], [20, 5, 1, "", "states"]], "caser.swarm_estimator.tracker.RandomFiniteSetBase": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "birth_terms"], [21, 2, 1, "", "calculate_ospa"], [21, 2, 1, "", "cleanup"], [21, 3, 1, "", "clutter_density"], [21, 3, 1, "", "clutter_rate"], [21, 2, 1, "", "correct"], [21, 3, 1, "", "debug_plots"], [21, 3, 1, "", "enable_spawning"], [21, 2, 1, "", "extract_states"], [21, 3, 1, "", "filter"], [21, 3, 1, "", "inv_chi2_gate"], [21, 2, 1, "", "load_filter_state"], [21, 5, 1, "", "num_birth_terms"], [21, 3, 1, "", "ospa"], [21, 3, 1, "", "ospa_cardinality"], [21, 3, 1, "", "ospa_localization"], [21, 5, 1, "", "ospa_method"], [21, 2, 1, "", "plot_ospa_history"], [21, 2, 1, "", "predict"], [21, 5, 1, "", "prob_death"], [21, 3, 1, "", "prob_detection"], [21, 5, 1, "", "prob_miss_detection"], [21, 3, 1, "", "prob_survive"], [21, 3, 1, "", "save_covs"], [21, 2, 1, "", "save_filter_state"], [21, 3, 1, "", "spawn_cov"], [21, 3, 1, "", "spawn_weight"]], "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "calculate_ospa"], [22, 2, 1, "", "calculate_ospa2"], [22, 5, 1, "", "cardinality"], [22, 2, 1, "", "cleanup"], [22, 3, 1, "", "compute_prob_detection"], [22, 3, 1, "", "compute_prob_survive"], [22, 2, 1, "", "correct"], [22, 5, 1, "", "covariances"], [22, 2, 1, "", "extract_most_prob_states"], [22, 2, 1, "", "extract_states"], [22, 3, 1, "", "filt_state"], [22, 5, 1, "", "filter"], [22, 5, 1, "", "labels"], [22, 2, 1, "", "load_filter_state"], [22, 5, 1, "", "num_birth_terms"], [22, 5, 1, "", "ospa_method"], [22, 2, 1, "", "plot_card_dist"], [22, 2, 1, "", "plot_card_history"], [22, 2, 1, "", "plot_ospa2_history"], [22, 2, 1, "", "plot_ospa_history"], [22, 2, 1, "", "plot_states_labels"], [22, 2, 1, "", "predict"], [22, 5, 1, "", "prob_death"], [22, 5, 1, "", "prob_miss_detection"], [22, 2, 1, "", "save_filter_state"], [22, 5, 1, "", "states"]], "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "calculate_ospa"], [23, 2, 1, "", "calculate_ospa2"], [23, 5, 1, "", "cardinality"], [23, 2, 1, "", "cleanup"], [23, 2, 1, "", "correct"], [23, 5, 1, "", "covariances"], [23, 2, 1, "", "extract_most_prob_states"], [23, 2, 1, "", "extract_states"], [23, 3, 1, "", "filt_state"], [23, 5, 1, "", "filter"], [23, 5, 1, "", "labels"], [23, 2, 1, "", "load_filter_state"], [23, 5, 1, "", "num_birth_terms"], [23, 5, 1, "", "ospa_method"], [23, 2, 1, "", "plot_card_dist"], [23, 2, 1, "", "plot_card_history"], [23, 2, 1, "", "plot_ospa2_history"], [23, 2, 1, "", "plot_ospa_history"], [23, 2, 1, "", "plot_states_labels"], [23, 2, 1, "", "predict"], [23, 5, 1, "", "prob_death"], [23, 5, 1, "", "prob_miss_detection"], [23, 2, 1, "", "save_filter_state"], [23, 5, 1, "", "states"]], "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "calculate_ospa"], [24, 2, 1, "", "calculate_ospa2"], [24, 5, 1, "", "cardinality"], [24, 2, 1, "", "cleanup"], [24, 2, 1, "", "correct"], [24, 5, 1, "", "covariances"], [24, 2, 1, "", "extract_most_prob_states"], [24, 2, 1, "", "extract_states"], [24, 3, 1, "", "filt_state"], [24, 5, 1, "", "filter"], [24, 5, 1, "", "labels"], [24, 2, 1, "", "load_filter_state"], [24, 5, 1, "", "num_birth_terms"], [24, 5, 1, "", "ospa_method"], [24, 2, 1, "", "plot_card_dist"], [24, 2, 1, "", "plot_card_history"], [24, 2, 1, "", "plot_ospa2_history"], [24, 2, 1, "", "plot_ospa_history"], [24, 2, 1, "", "plot_states_labels"], [24, 2, 1, "", "predict"], [24, 5, 1, "", "prob_death"], [24, 5, 1, "", "prob_miss_detection"], [24, 2, 1, "", "save_filter_state"], [24, 5, 1, "", "states"]], "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "calculate_ospa"], [25, 2, 1, "", "calculate_ospa2"], [25, 5, 1, "", "cardinality"], [25, 2, 1, "", "cleanup"], [25, 2, 1, "", "correct"], [25, 5, 1, "", "covariances"], [25, 2, 1, "", "extract_most_prob_states"], [25, 2, 1, "", "extract_states"], [25, 3, 1, "", "filt_state"], [25, 5, 1, "", "filter"], [25, 5, 1, "", "labels"], [25, 2, 1, "", "load_filter_state"], [25, 5, 1, "", "num_birth_terms"], [25, 5, 1, "", "ospa_method"], [25, 2, 1, "", "plot_card_dist"], [25, 2, 1, "", "plot_card_history"], [25, 2, 1, "", "plot_ospa2_history"], [25, 2, 1, "", "plot_ospa_history"], [25, 2, 1, "", "plot_states_labels"], [25, 2, 1, "", "predict"], [25, 5, 1, "", "prob_death"], [25, 5, 1, "", "prob_miss_detection"], [25, 2, 1, "", "save_filter_state"], [25, 5, 1, "", "states"]], "caser.utilities": [[27, 0, 0, "-", "graphs"], [33, 0, 0, "-", "graphs_subroutines"], [37, 0, 0, "-", "sampling"]], "caser.utilities.graphs": [[28, 4, 1, "", "a_star_search"], [29, 4, 1, "", "bfm_shortest_path"], [30, 4, 1, "", "k_shortest"], [31, 4, 1, "", "murty_m_best"], [32, 4, 1, "", "murty_m_best_all_meas_assigned"]], "caser.utilities.graphs_subroutines": [[34, 1, 1, "", "AStarNode"], [35, 4, 1, "", "assign_opt"], [36, 4, 1, "", "astar_return_path"]], "caser.utilities.graphs_subroutines.AStarNode": [[34, 2, 1, "", "__init__"]], "caser.utilities.sampling": [[38, 4, 1, "", "gibbs"], [39, 4, 1, "", "mm_gibbs"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"refer": [0, 40], "caser": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42], "guidanc": [2, 3, 4, 5], "elqr": [3, 46], "elqrospa": 4, "gaussian_density_cost": 5, "swarm_estim": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "slam": 7, "tracker": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "cardinalizedphd": 9, "gsmgeneralizedlabeledmultibernoulli": 10, "gsmjointgeneralizedlabeledmultibernoulli": 11, "todo": [11, 15, 16, 17, 18, 20, 22, 23, 25], "generalizedlabeledmultibernoulli": 12, "immcardinalizedphd": 13, "immgeneralizedlabeledmultibernoulli": 14, "immjointgeneralizedlabeledmultibernoulli": 15, "immprobabilityhypothesisdens": 16, "jointgeneralizedlabeledmultibernoulli": 17, "msjointgeneralizedlabeledmultibernoulli": 18, "poissonmultibernoullimixtur": 19, "probabilityhypothesisdens": 20, "randomfinitesetbas": 21, "smcgeneralizedlabeledmultibernoulli": 22, "smcjointgeneralizedlabeledmultibernoulli": 23, "stmgeneralizedlabeledmultibernoulli": 24, "stmjointgeneralizedlabeledmultibernoulli": 25, "util": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "graph": [27, 28, 29, 30, 31, 32], "a_star_search": 28, "bfm_shortest_path": 29, "k_shortest": 30, "murty_m_best": 31, "murty_m_best_all_meas_assign": 32, "graphs_subroutin": [33, 34, 35, 36], "astarnod": 34, "assign_opt": 35, "astar_return_path": 36, "sampl": [37, 38, 39], "gibb": 38, "mm_gibb": 39, "api": 40, "ci": 41, "cd": 41, "pipelin": 41, "github": 41, "action": 41, "quick": 41, "guid": 41, "": 42, "document": 42, "content": [42, 44, 45], "cite": 42, "indic": 42, "tabl": [42, 44], "licens": 43, "toolchain": 44, "setup": 44, "develop": 44, "environ": 44, "exampl": [44, 46], "workflow": 44, "note": 44, "tox": 44, "usag": 45, "gaussian": 46, "mixtur": 46, "base": 46, "optim": 46, "sub": 46, "pattern": 46, "assign": 46, "ospa": 46, "obstacl": 46}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"References": [[0, "references"]], "caser": [[1, "module-caser"]], "caser.guidance": [[2, "module-caser.guidance"]], "caser.guidance.ELQR": [[3, "caser-guidance-elqr"]], "caser.guidance.ELQROSPA": [[4, "caser-guidance-elqrospa"]], "caser.guidance.gaussian_density_cost": [[5, "caser-guidance-gaussian-density-cost"]], "caser.swarm_estimator": [[6, "module-caser.swarm_estimator"]], "caser.swarm_estimator.slam": [[7, "module-caser.swarm_estimator.slam"]], "caser.swarm_estimator.tracker": [[8, "module-caser.swarm_estimator.tracker"]], "caser.swarm_estimator.tracker.CardinalizedPHD": [[9, "caser-swarm-estimator-tracker-cardinalizedphd"]], "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli": [[10, "caser-swarm-estimator-tracker-gsmgeneralizedlabeledmultibernoulli"]], "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli": [[11, "caser-swarm-estimator-tracker-gsmjointgeneralizedlabeledmultibernoulli"]], "Todo": [[11, "id1"], [15, "id1"], [16, "id1"], [17, "id2"], [18, "id1"], [20, "id2"], [22, "id2"], [23, "id1"], [25, "id1"]], "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli": [[12, "caser-swarm-estimator-tracker-generalizedlabeledmultibernoulli"]], "caser.swarm_estimator.tracker.IMMCardinalizedPHD": [[13, "caser-swarm-estimator-tracker-immcardinalizedphd"]], "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli": [[14, "caser-swarm-estimator-tracker-immgeneralizedlabeledmultibernoulli"]], "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli": [[15, "caser-swarm-estimator-tracker-immjointgeneralizedlabeledmultibernoulli"]], "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity": [[16, "caser-swarm-estimator-tracker-immprobabilityhypothesisdensity"]], "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli": [[17, "caser-swarm-estimator-tracker-jointgeneralizedlabeledmultibernoulli"]], "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli": [[18, "caser-swarm-estimator-tracker-msjointgeneralizedlabeledmultibernoulli"]], "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture": [[19, "caser-swarm-estimator-tracker-poissonmultibernoullimixture"]], "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity": [[20, "caser-swarm-estimator-tracker-probabilityhypothesisdensity"]], "caser.swarm_estimator.tracker.RandomFiniteSetBase": [[21, "caser-swarm-estimator-tracker-randomfinitesetbase"]], "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli": [[22, "caser-swarm-estimator-tracker-smcgeneralizedlabeledmultibernoulli"]], "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli": [[23, "caser-swarm-estimator-tracker-smcjointgeneralizedlabeledmultibernoulli"]], "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli": [[24, "caser-swarm-estimator-tracker-stmgeneralizedlabeledmultibernoulli"]], "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli": [[25, "caser-swarm-estimator-tracker-stmjointgeneralizedlabeledmultibernoulli"]], "caser.utilities": [[26, "module-caser.utilities"]], "caser.utilities.graphs": [[27, "module-caser.utilities.graphs"]], "caser.utilities.graphs.a_star_search": [[28, "caser-utilities-graphs-a-star-search"]], "caser.utilities.graphs.bfm_shortest_path": [[29, "caser-utilities-graphs-bfm-shortest-path"]], "caser.utilities.graphs.k_shortest": [[30, "caser-utilities-graphs-k-shortest"]], "caser.utilities.graphs.murty_m_best": [[31, "caser-utilities-graphs-murty-m-best"]], "caser.utilities.graphs.murty_m_best_all_meas_assigned": [[32, "caser-utilities-graphs-murty-m-best-all-meas-assigned"]], "caser.utilities.graphs_subroutines": [[33, "module-caser.utilities.graphs_subroutines"]], "caser.utilities.graphs_subroutines.AStarNode": [[34, "caser-utilities-graphs-subroutines-astarnode"]], "caser.utilities.graphs_subroutines.assign_opt": [[35, "caser-utilities-graphs-subroutines-assign-opt"]], "caser.utilities.graphs_subroutines.astar_return_path": [[36, "caser-utilities-graphs-subroutines-astar-return-path"]], "caser.utilities.sampling": [[37, "module-caser.utilities.sampling"]], "caser.utilities.sampling.gibbs": [[38, "caser-utilities-sampling-gibbs"]], "caser.utilities.sampling.mm_gibbs": [[39, "caser-utilities-sampling-mm-gibbs"]], "API Reference": [[40, "api-reference"]], "CI/CD Pipeline": [[41, "ci-cd-pipeline"]], "Github Actions Quick Guide": [[41, "github-actions-quick-guide"]], "CASER\u2019s documentation": [[42, "caser-s-documentation"]], "Contents:": [[42, null], [45, null]], "Cite": [[42, "cite"]], "Indices and tables": [[42, "indices-and-tables"]], "License": [[43, "license"]], "Toolchain Setup": [[44, "toolchain-setup"]], "Table of Contents": [[44, "table-of-contents"]], "Development Environment Setup": [[44, "development-environment-setup"]], "Example Workflow": [[44, "example-workflow"]], "Notes on tox": [[44, "notes-on-tox"]], "Usage": [[45, "usage"]], "ELQR Examples": [[46, "elqr-examples"]], "Examples": [[46, "examples"]], "Gaussian Mixture Based": [[46, "gaussian-mixture-based"]], "Optimal Sub-Pattern Assignment Based": [[46, "optimal-sub-pattern-assignment-based"]], "OSPA Based with Obstacles": [[46, "ospa-based-with-obstacles"]]}, "indexentries": {"caser": [[1, "module-caser"]], "module": [[1, "module-caser"], [2, "module-caser.guidance"], [6, "module-caser.swarm_estimator"], [7, "module-caser.swarm_estimator.slam"], [8, "module-caser.swarm_estimator.tracker"], [26, "module-caser.utilities"], [27, "module-caser.utilities.graphs"], [33, "module-caser.utilities.graphs_subroutines"], [37, "module-caser.utilities.sampling"]], "caser.guidance": [[2, "module-caser.guidance"]], "elqr (class in caser.guidance)": [[3, "caser.guidance.ELQR"]], "__init__() (elqr method)": [[3, "caser.guidance.ELQR.__init__"]], "find_end_state() (elqr method)": [[3, "caser.guidance.ELQR.find_end_state"]], "gen_final_traj() (elqr method)": [[3, "caser.guidance.ELQR.gen_final_traj"]], "get_state_dist() (elqr method)": [[3, "caser.guidance.ELQR.get_state_dist"]], "init_elqr_lst() (elqr method)": [[3, "caser.guidance.ELQR.init_elqr_lst"]], "max_iters (elqr attribute)": [[3, "caser.guidance.ELQR.max_iters"]], "non_quad_fun_factory() (elqr method)": [[3, "caser.guidance.ELQR.non_quad_fun_factory"]], "plan() (elqr method)": [[3, "caser.guidance.ELQR.plan"]], "set_control_model() (elqr method)": [[3, "caser.guidance.ELQR.set_control_model"]], "set_cost_model() (elqr method)": [[3, "caser.guidance.ELQR.set_cost_model"]], "targets_to_wayareas() (elqr method)": [[3, "caser.guidance.ELQR.targets_to_wayareas"]], "tol (elqr attribute)": [[3, "caser.guidance.ELQR.tol"]], "elqrospa (class in caser.guidance)": [[4, "caser.guidance.ELQROSPA"]], "__init__() (elqrospa method)": [[4, "caser.guidance.ELQROSPA.__init__"]], "find_end_state() (elqrospa method)": [[4, "caser.guidance.ELQROSPA.find_end_state"]], "gen_final_traj() (elqrospa method)": [[4, "caser.guidance.ELQROSPA.gen_final_traj"]], "get_state_dist() (elqrospa method)": [[4, "caser.guidance.ELQROSPA.get_state_dist"]], "init_elqr_lst() (elqrospa method)": [[4, "caser.guidance.ELQROSPA.init_elqr_lst"]], "non_quad_fun_factory() (elqrospa method)": [[4, "caser.guidance.ELQROSPA.non_quad_fun_factory"]], "plan() (elqrospa method)": [[4, "caser.guidance.ELQROSPA.plan"]], "set_control_model() (elqrospa method)": [[4, "caser.guidance.ELQROSPA.set_control_model"]], "set_cost_model() (elqrospa method)": [[4, "caser.guidance.ELQROSPA.set_cost_model"]], "targets_to_wayareas() (elqrospa method)": [[4, "caser.guidance.ELQROSPA.targets_to_wayareas"]], "gaussian_density_cost() (in module caser.guidance)": [[5, "caser.guidance.gaussian_density_cost"]], "caser.swarm_estimator": [[6, "module-caser.swarm_estimator"]], "caser.swarm_estimator.slam": [[7, "module-caser.swarm_estimator.slam"]], "caser.swarm_estimator.tracker": [[8, "module-caser.swarm_estimator.tracker"]], "cardinalizedphd (class in caser.swarm_estimator.tracker)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD"]], "__init__() (cardinalizedphd method)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.__init__"]], "agents_per_state (cardinalizedphd attribute)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.agents_per_state"]], "animate_state_plot() (cardinalizedphd method)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.animate_state_plot"]], "calculate_ospa() (cardinalizedphd method)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.calculate_ospa"]], "cardinality (cardinalizedphd property)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.cardinality"]], "cleanup() (cardinalizedphd method)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.cleanup"]], "correct() (cardinalizedphd method)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.correct"]], "covariances (cardinalizedphd property)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.covariances"]], "extract_states() (cardinalizedphd method)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.extract_states"]], "filt_state (cardinalizedphd attribute)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.filt_state"]], "load_filter_state() (cardinalizedphd method)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.load_filter_state"]], "max_expected_card (cardinalizedphd property)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.max_expected_card"]], "num_birth_terms (cardinalizedphd property)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.num_birth_terms"]], "ospa_method (cardinalizedphd property)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.ospa_method"]], "plot_card_dist() (cardinalizedphd method)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.plot_card_dist"]], "plot_card_history() (cardinalizedphd method)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.plot_card_history"]], "plot_number_states_per_time() (cardinalizedphd method)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.plot_number_states_per_time"]], "plot_ospa_history() (cardinalizedphd method)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.plot_ospa_history"]], "plot_states() (cardinalizedphd method)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.plot_states"]], "predict() (cardinalizedphd method)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.predict"]], "prob_death (cardinalizedphd property)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.prob_death"]], "prob_miss_detection (cardinalizedphd property)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.prob_miss_detection"]], "save_filter_state() (cardinalizedphd method)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.save_filter_state"]], "states (cardinalizedphd property)": [[9, "caser.swarm_estimator.tracker.CardinalizedPHD.states"]], "gsmgeneralizedlabeledmultibernoulli (class in caser.swarm_estimator.tracker)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli"]], "__init__() (gsmgeneralizedlabeledmultibernoulli method)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.__init__"]], "calculate_ospa() (gsmgeneralizedlabeledmultibernoulli method)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.calculate_ospa"]], "calculate_ospa2() (gsmgeneralizedlabeledmultibernoulli method)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.calculate_ospa2"]], "cardinality (gsmgeneralizedlabeledmultibernoulli property)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.cardinality"]], "cleanup() (gsmgeneralizedlabeledmultibernoulli method)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.cleanup"]], "correct() (gsmgeneralizedlabeledmultibernoulli method)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.correct"]], "covariances (gsmgeneralizedlabeledmultibernoulli property)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.covariances"]], "extract_most_prob_states() (gsmgeneralizedlabeledmultibernoulli method)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.extract_most_prob_states"]], "extract_states() (gsmgeneralizedlabeledmultibernoulli method)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.extract_states"]], "filt_state (gsmgeneralizedlabeledmultibernoulli attribute)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.filt_state"]], "filter (gsmgeneralizedlabeledmultibernoulli property)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.filter"]], "labels (gsmgeneralizedlabeledmultibernoulli property)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.labels"]], "load_filter_state() (gsmgeneralizedlabeledmultibernoulli method)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.load_filter_state"]], "num_birth_terms (gsmgeneralizedlabeledmultibernoulli property)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.num_birth_terms"]], "ospa_method (gsmgeneralizedlabeledmultibernoulli property)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.ospa_method"]], "plot_card_dist() (gsmgeneralizedlabeledmultibernoulli method)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.plot_card_dist"]], "plot_card_history() (gsmgeneralizedlabeledmultibernoulli method)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.plot_card_history"]], "plot_ospa2_history() (gsmgeneralizedlabeledmultibernoulli method)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.plot_ospa2_history"]], "plot_ospa_history() (gsmgeneralizedlabeledmultibernoulli method)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.plot_ospa_history"]], "plot_states_labels() (gsmgeneralizedlabeledmultibernoulli method)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.plot_states_labels"]], "predict() (gsmgeneralizedlabeledmultibernoulli method)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.predict"]], "prob_death (gsmgeneralizedlabeledmultibernoulli property)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.prob_death"]], "prob_miss_detection (gsmgeneralizedlabeledmultibernoulli property)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.prob_miss_detection"]], "save_filter_state() (gsmgeneralizedlabeledmultibernoulli method)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.save_filter_state"]], "states (gsmgeneralizedlabeledmultibernoulli property)": [[10, "caser.swarm_estimator.tracker.GSMGeneralizedLabeledMultiBernoulli.states"]], "gsmjointgeneralizedlabeledmultibernoulli (class in caser.swarm_estimator.tracker)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli"]], "__init__() (gsmjointgeneralizedlabeledmultibernoulli method)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.__init__"]], "calculate_ospa() (gsmjointgeneralizedlabeledmultibernoulli method)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.calculate_ospa"]], "calculate_ospa2() (gsmjointgeneralizedlabeledmultibernoulli method)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.calculate_ospa2"]], "cardinality (gsmjointgeneralizedlabeledmultibernoulli property)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.cardinality"]], "cleanup() (gsmjointgeneralizedlabeledmultibernoulli method)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.cleanup"]], "correct() (gsmjointgeneralizedlabeledmultibernoulli method)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.correct"]], "covariances (gsmjointgeneralizedlabeledmultibernoulli property)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.covariances"]], "extract_most_prob_states() (gsmjointgeneralizedlabeledmultibernoulli method)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.extract_most_prob_states"]], "extract_states() (gsmjointgeneralizedlabeledmultibernoulli method)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.extract_states"]], "filt_state (gsmjointgeneralizedlabeledmultibernoulli attribute)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.filt_state"]], "filter (gsmjointgeneralizedlabeledmultibernoulli property)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.filter"]], "labels (gsmjointgeneralizedlabeledmultibernoulli property)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.labels"]], "load_filter_state() (gsmjointgeneralizedlabeledmultibernoulli method)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.load_filter_state"]], "num_birth_terms (gsmjointgeneralizedlabeledmultibernoulli property)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.num_birth_terms"]], "ospa_method (gsmjointgeneralizedlabeledmultibernoulli property)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.ospa_method"]], "plot_card_dist() (gsmjointgeneralizedlabeledmultibernoulli method)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.plot_card_dist"]], "plot_card_history() (gsmjointgeneralizedlabeledmultibernoulli method)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.plot_card_history"]], "plot_ospa2_history() (gsmjointgeneralizedlabeledmultibernoulli method)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.plot_ospa2_history"]], "plot_ospa_history() (gsmjointgeneralizedlabeledmultibernoulli method)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.plot_ospa_history"]], "plot_states_labels() (gsmjointgeneralizedlabeledmultibernoulli method)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.plot_states_labels"]], "predict() (gsmjointgeneralizedlabeledmultibernoulli method)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.predict"]], "prob_death (gsmjointgeneralizedlabeledmultibernoulli property)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.prob_death"]], "prob_miss_detection (gsmjointgeneralizedlabeledmultibernoulli property)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.prob_miss_detection"]], "save_filter_state() (gsmjointgeneralizedlabeledmultibernoulli method)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.save_filter_state"]], "states (gsmjointgeneralizedlabeledmultibernoulli property)": [[11, "caser.swarm_estimator.tracker.GSMJointGeneralizedLabeledMultiBernoulli.states"]], "generalizedlabeledmultibernoulli (class in caser.swarm_estimator.tracker)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli"]], "__init__() (generalizedlabeledmultibernoulli method)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.__init__"]], "birth_terms (generalizedlabeledmultibernoulli attribute)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.birth_terms"]], "calculate_ospa() (generalizedlabeledmultibernoulli method)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.calculate_ospa"]], "calculate_ospa2() (generalizedlabeledmultibernoulli method)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.calculate_ospa2"]], "cardinality (generalizedlabeledmultibernoulli property)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.cardinality"]], "cleanup() (generalizedlabeledmultibernoulli method)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.cleanup"]], "correct() (generalizedlabeledmultibernoulli method)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.correct"]], "covariances (generalizedlabeledmultibernoulli property)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.covariances"]], "decimal_places (generalizedlabeledmultibernoulli attribute)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.decimal_places"]], "extract_most_prob_states() (generalizedlabeledmultibernoulli method)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.extract_most_prob_states"]], "extract_states() (generalizedlabeledmultibernoulli method)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.extract_states"]], "filt_state (generalizedlabeledmultibernoulli attribute)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.filt_state"]], "filter (generalizedlabeledmultibernoulli property)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.filter"]], "gating_on (generalizedlabeledmultibernoulli attribute)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.gating_on"]], "labels (generalizedlabeledmultibernoulli property)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.labels"]], "load_filter_state() (generalizedlabeledmultibernoulli method)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.load_filter_state"]], "max_hyps (generalizedlabeledmultibernoulli attribute)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.max_hyps"]], "num_birth_terms (generalizedlabeledmultibernoulli property)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.num_birth_terms"]], "ospa_method (generalizedlabeledmultibernoulli property)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.ospa_method"]], "plot_card_dist() (generalizedlabeledmultibernoulli method)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.plot_card_dist"]], "plot_card_history() (generalizedlabeledmultibernoulli method)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.plot_card_history"]], "plot_ospa2_history() (generalizedlabeledmultibernoulli method)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.plot_ospa2_history"]], "plot_ospa_history() (generalizedlabeledmultibernoulli method)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.plot_ospa_history"]], "plot_states_labels() (generalizedlabeledmultibernoulli method)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.plot_states_labels"]], "predict() (generalizedlabeledmultibernoulli method)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.predict"]], "prob_death (generalizedlabeledmultibernoulli property)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.prob_death"]], "prob_miss_detection (generalizedlabeledmultibernoulli property)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.prob_miss_detection"]], "prune_threshold (generalizedlabeledmultibernoulli attribute)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.prune_threshold"]], "req_births (generalizedlabeledmultibernoulli attribute)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.req_births"]], "req_surv (generalizedlabeledmultibernoulli attribute)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.req_surv"]], "req_upd (generalizedlabeledmultibernoulli attribute)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.req_upd"]], "save_filter_state() (generalizedlabeledmultibernoulli method)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.save_filter_state"]], "save_measurements (generalizedlabeledmultibernoulli attribute)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.save_measurements"]], "states (generalizedlabeledmultibernoulli property)": [[12, "caser.swarm_estimator.tracker.GeneralizedLabeledMultiBernoulli.states"]], "immcardinalizedphd (class in caser.swarm_estimator.tracker)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD"]], "__init__() (immcardinalizedphd method)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.__init__"]], "animate_state_plot() (immcardinalizedphd method)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.animate_state_plot"]], "calculate_ospa() (immcardinalizedphd method)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.calculate_ospa"]], "cardinality (immcardinalizedphd property)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.cardinality"]], "cleanup() (immcardinalizedphd method)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.cleanup"]], "correct() (immcardinalizedphd method)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.correct"]], "covariances (immcardinalizedphd property)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.covariances"]], "extract_states() (immcardinalizedphd method)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.extract_states"]], "filt_state (immcardinalizedphd attribute)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.filt_state"]], "load_filter_state() (immcardinalizedphd method)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.load_filter_state"]], "max_expected_card (immcardinalizedphd property)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.max_expected_card"]], "num_birth_terms (immcardinalizedphd property)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.num_birth_terms"]], "ospa_method (immcardinalizedphd property)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.ospa_method"]], "plot_card_dist() (immcardinalizedphd method)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.plot_card_dist"]], "plot_card_history() (immcardinalizedphd method)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.plot_card_history"]], "plot_number_states_per_time() (immcardinalizedphd method)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.plot_number_states_per_time"]], "plot_ospa_history() (immcardinalizedphd method)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.plot_ospa_history"]], "plot_states() (immcardinalizedphd method)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.plot_states"]], "predict() (immcardinalizedphd method)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.predict"]], "prob_death (immcardinalizedphd property)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.prob_death"]], "prob_miss_detection (immcardinalizedphd property)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.prob_miss_detection"]], "save_filter_state() (immcardinalizedphd method)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.save_filter_state"]], "states (immcardinalizedphd property)": [[13, "caser.swarm_estimator.tracker.IMMCardinalizedPHD.states"]], "immgeneralizedlabeledmultibernoulli (class in caser.swarm_estimator.tracker)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli"]], "__init__() (immgeneralizedlabeledmultibernoulli method)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.__init__"]], "calculate_ospa() (immgeneralizedlabeledmultibernoulli method)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.calculate_ospa"]], "calculate_ospa2() (immgeneralizedlabeledmultibernoulli method)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.calculate_ospa2"]], "cardinality (immgeneralizedlabeledmultibernoulli property)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.cardinality"]], "cleanup() (immgeneralizedlabeledmultibernoulli method)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.cleanup"]], "correct() (immgeneralizedlabeledmultibernoulli method)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.correct"]], "covariances (immgeneralizedlabeledmultibernoulli property)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.covariances"]], "extract_most_prob_states() (immgeneralizedlabeledmultibernoulli method)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.extract_most_prob_states"]], "extract_states() (immgeneralizedlabeledmultibernoulli method)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.extract_states"]], "filt_state (immgeneralizedlabeledmultibernoulli attribute)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.filt_state"]], "filter (immgeneralizedlabeledmultibernoulli property)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.filter"]], "labels (immgeneralizedlabeledmultibernoulli property)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.labels"]], "load_filter_state() (immgeneralizedlabeledmultibernoulli method)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.load_filter_state"]], "num_birth_terms (immgeneralizedlabeledmultibernoulli property)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.num_birth_terms"]], "ospa_method (immgeneralizedlabeledmultibernoulli property)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.ospa_method"]], "plot_card_dist() (immgeneralizedlabeledmultibernoulli method)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.plot_card_dist"]], "plot_card_history() (immgeneralizedlabeledmultibernoulli method)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.plot_card_history"]], "plot_ospa2_history() (immgeneralizedlabeledmultibernoulli method)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.plot_ospa2_history"]], "plot_ospa_history() (immgeneralizedlabeledmultibernoulli method)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.plot_ospa_history"]], "plot_states_labels() (immgeneralizedlabeledmultibernoulli method)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.plot_states_labels"]], "predict() (immgeneralizedlabeledmultibernoulli method)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.predict"]], "prob_death (immgeneralizedlabeledmultibernoulli property)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.prob_death"]], "prob_miss_detection (immgeneralizedlabeledmultibernoulli property)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.prob_miss_detection"]], "save_filter_state() (immgeneralizedlabeledmultibernoulli method)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.save_filter_state"]], "states (immgeneralizedlabeledmultibernoulli property)": [[14, "caser.swarm_estimator.tracker.IMMGeneralizedLabeledMultiBernoulli.states"]], "immjointgeneralizedlabeledmultibernoulli (class in caser.swarm_estimator.tracker)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli"]], "__init__() (immjointgeneralizedlabeledmultibernoulli method)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.__init__"]], "calculate_ospa() (immjointgeneralizedlabeledmultibernoulli method)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.calculate_ospa"]], "calculate_ospa2() (immjointgeneralizedlabeledmultibernoulli method)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.calculate_ospa2"]], "cardinality (immjointgeneralizedlabeledmultibernoulli property)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.cardinality"]], "cleanup() (immjointgeneralizedlabeledmultibernoulli method)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.cleanup"]], "correct() (immjointgeneralizedlabeledmultibernoulli method)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.correct"]], "covariances (immjointgeneralizedlabeledmultibernoulli property)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.covariances"]], "extract_most_prob_states() (immjointgeneralizedlabeledmultibernoulli method)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.extract_most_prob_states"]], "extract_states() (immjointgeneralizedlabeledmultibernoulli method)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.extract_states"]], "filt_state (immjointgeneralizedlabeledmultibernoulli attribute)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.filt_state"]], "filter (immjointgeneralizedlabeledmultibernoulli property)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.filter"]], "labels (immjointgeneralizedlabeledmultibernoulli property)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.labels"]], "load_filter_state() (immjointgeneralizedlabeledmultibernoulli method)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.load_filter_state"]], "num_birth_terms (immjointgeneralizedlabeledmultibernoulli property)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.num_birth_terms"]], "ospa_method (immjointgeneralizedlabeledmultibernoulli property)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.ospa_method"]], "plot_card_dist() (immjointgeneralizedlabeledmultibernoulli method)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.plot_card_dist"]], "plot_card_history() (immjointgeneralizedlabeledmultibernoulli method)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.plot_card_history"]], "plot_ospa2_history() (immjointgeneralizedlabeledmultibernoulli method)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.plot_ospa2_history"]], "plot_ospa_history() (immjointgeneralizedlabeledmultibernoulli method)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.plot_ospa_history"]], "plot_states_labels() (immjointgeneralizedlabeledmultibernoulli method)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.plot_states_labels"]], "predict() (immjointgeneralizedlabeledmultibernoulli method)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.predict"]], "prob_death (immjointgeneralizedlabeledmultibernoulli property)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.prob_death"]], "prob_miss_detection (immjointgeneralizedlabeledmultibernoulli property)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.prob_miss_detection"]], "save_filter_state() (immjointgeneralizedlabeledmultibernoulli method)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.save_filter_state"]], "states (immjointgeneralizedlabeledmultibernoulli property)": [[15, "caser.swarm_estimator.tracker.IMMJointGeneralizedLabeledMultiBernoulli.states"]], "immprobabilityhypothesisdensity (class in caser.swarm_estimator.tracker)": [[16, "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity"]], "__init__() (immprobabilityhypothesisdensity method)": [[16, "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity.__init__"]], "animate_state_plot() (immprobabilityhypothesisdensity method)": [[16, "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity.animate_state_plot"]], "calculate_ospa() (immprobabilityhypothesisdensity method)": [[16, "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity.calculate_ospa"]], "cardinality (immprobabilityhypothesisdensity property)": [[16, "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity.cardinality"]], "cleanup() (immprobabilityhypothesisdensity method)": [[16, "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity.cleanup"]], "correct() (immprobabilityhypothesisdensity method)": [[16, "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity.correct"]], "covariances (immprobabilityhypothesisdensity property)": [[16, "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity.covariances"]], "extract_states() (immprobabilityhypothesisdensity method)": [[16, "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity.extract_states"]], "filt_state (immprobabilityhypothesisdensity attribute)": [[16, "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity.filt_state"]], "load_filter_state() (immprobabilityhypothesisdensity method)": [[16, "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity.load_filter_state"]], "num_birth_terms (immprobabilityhypothesisdensity property)": [[16, "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity.num_birth_terms"]], "ospa_method (immprobabilityhypothesisdensity property)": [[16, "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity.ospa_method"]], "plot_ospa_history() (immprobabilityhypothesisdensity method)": [[16, "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity.plot_ospa_history"]], "plot_states() (immprobabilityhypothesisdensity method)": [[16, "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity.plot_states"]], "predict() (immprobabilityhypothesisdensity method)": [[16, "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity.predict"]], "prob_death (immprobabilityhypothesisdensity property)": [[16, "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity.prob_death"]], "prob_miss_detection (immprobabilityhypothesisdensity property)": [[16, "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity.prob_miss_detection"]], "save_filter_state() (immprobabilityhypothesisdensity method)": [[16, "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity.save_filter_state"]], "states (immprobabilityhypothesisdensity property)": [[16, "caser.swarm_estimator.tracker.IMMProbabilityHypothesisDensity.states"]], "jointgeneralizedlabeledmultibernoulli (class in caser.swarm_estimator.tracker)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli"]], "__init__() (jointgeneralizedlabeledmultibernoulli method)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.__init__"]], "calculate_ospa() (jointgeneralizedlabeledmultibernoulli method)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.calculate_ospa"]], "calculate_ospa2() (jointgeneralizedlabeledmultibernoulli method)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.calculate_ospa2"]], "cardinality (jointgeneralizedlabeledmultibernoulli property)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.cardinality"]], "cleanup() (jointgeneralizedlabeledmultibernoulli method)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.cleanup"]], "correct() (jointgeneralizedlabeledmultibernoulli method)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.correct"]], "covariances (jointgeneralizedlabeledmultibernoulli property)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.covariances"]], "extract_most_prob_states() (jointgeneralizedlabeledmultibernoulli method)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.extract_most_prob_states"]], "extract_states() (jointgeneralizedlabeledmultibernoulli method)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.extract_states"]], "filt_state (jointgeneralizedlabeledmultibernoulli attribute)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.filt_state"]], "filter (jointgeneralizedlabeledmultibernoulli property)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.filter"]], "labels (jointgeneralizedlabeledmultibernoulli property)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.labels"]], "load_filter_state() (jointgeneralizedlabeledmultibernoulli method)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.load_filter_state"]], "num_birth_terms (jointgeneralizedlabeledmultibernoulli property)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.num_birth_terms"]], "ospa_method (jointgeneralizedlabeledmultibernoulli property)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.ospa_method"]], "plot_card_dist() (jointgeneralizedlabeledmultibernoulli method)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.plot_card_dist"]], "plot_card_history() (jointgeneralizedlabeledmultibernoulli method)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.plot_card_history"]], "plot_ospa2_history() (jointgeneralizedlabeledmultibernoulli method)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.plot_ospa2_history"]], "plot_ospa_history() (jointgeneralizedlabeledmultibernoulli method)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.plot_ospa_history"]], "plot_states_labels() (jointgeneralizedlabeledmultibernoulli method)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.plot_states_labels"]], "predict() (jointgeneralizedlabeledmultibernoulli method)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.predict"]], "prob_death (jointgeneralizedlabeledmultibernoulli property)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.prob_death"]], "prob_miss_detection (jointgeneralizedlabeledmultibernoulli property)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.prob_miss_detection"]], "save_filter_state() (jointgeneralizedlabeledmultibernoulli method)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.save_filter_state"]], "states (jointgeneralizedlabeledmultibernoulli property)": [[17, "caser.swarm_estimator.tracker.JointGeneralizedLabeledMultiBernoulli.states"]], "msjointgeneralizedlabeledmultibernoulli (class in caser.swarm_estimator.tracker)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli"]], "__init__() (msjointgeneralizedlabeledmultibernoulli method)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.__init__"]], "calculate_ospa() (msjointgeneralizedlabeledmultibernoulli method)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.calculate_ospa"]], "calculate_ospa2() (msjointgeneralizedlabeledmultibernoulli method)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.calculate_ospa2"]], "cardinality (msjointgeneralizedlabeledmultibernoulli property)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.cardinality"]], "cleanup() (msjointgeneralizedlabeledmultibernoulli method)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.cleanup"]], "correct() (msjointgeneralizedlabeledmultibernoulli method)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.correct"]], "covariances (msjointgeneralizedlabeledmultibernoulli property)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.covariances"]], "extract_most_prob_states() (msjointgeneralizedlabeledmultibernoulli method)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.extract_most_prob_states"]], "extract_states() (msjointgeneralizedlabeledmultibernoulli method)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.extract_states"]], "filt_state (msjointgeneralizedlabeledmultibernoulli attribute)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.filt_state"]], "filter (msjointgeneralizedlabeledmultibernoulli property)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.filter"]], "labels (msjointgeneralizedlabeledmultibernoulli property)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.labels"]], "load_filter_state() (msjointgeneralizedlabeledmultibernoulli method)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.load_filter_state"]], "num_birth_terms (msjointgeneralizedlabeledmultibernoulli property)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.num_birth_terms"]], "ospa_method (msjointgeneralizedlabeledmultibernoulli property)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.ospa_method"]], "plot_card_dist() (msjointgeneralizedlabeledmultibernoulli method)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.plot_card_dist"]], "plot_card_history() (msjointgeneralizedlabeledmultibernoulli method)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.plot_card_history"]], "plot_ospa2_history() (msjointgeneralizedlabeledmultibernoulli method)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.plot_ospa2_history"]], "plot_ospa_history() (msjointgeneralizedlabeledmultibernoulli method)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.plot_ospa_history"]], "plot_states_labels() (msjointgeneralizedlabeledmultibernoulli method)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.plot_states_labels"]], "predict() (msjointgeneralizedlabeledmultibernoulli method)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.predict"]], "prob_death (msjointgeneralizedlabeledmultibernoulli property)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.prob_death"]], "prob_miss_detection (msjointgeneralizedlabeledmultibernoulli property)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.prob_miss_detection"]], "save_filter_state() (msjointgeneralizedlabeledmultibernoulli method)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.save_filter_state"]], "states (msjointgeneralizedlabeledmultibernoulli property)": [[18, "caser.swarm_estimator.tracker.MSJointGeneralizedLabeledMultiBernoulli.states"]], "poissonmultibernoullimixture (class in caser.swarm_estimator.tracker)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture"]], "__init__() (poissonmultibernoullimixture method)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.__init__"]], "calculate_ospa() (poissonmultibernoullimixture method)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.calculate_ospa"]], "calculate_ospa2() (poissonmultibernoullimixture method)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.calculate_ospa2"]], "cardinality (poissonmultibernoullimixture property)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.cardinality"]], "cleanup() (poissonmultibernoullimixture method)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.cleanup"]], "correct() (poissonmultibernoullimixture method)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.correct"]], "covariances (poissonmultibernoullimixture property)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.covariances"]], "extract_states() (poissonmultibernoullimixture method)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.extract_states"]], "filt_state (poissonmultibernoullimixture attribute)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.filt_state"]], "filter (poissonmultibernoullimixture property)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.filter"]], "load_filter_state() (poissonmultibernoullimixture method)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.load_filter_state"]], "num_birth_terms (poissonmultibernoullimixture property)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.num_birth_terms"]], "ospa_method (poissonmultibernoullimixture property)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.ospa_method"]], "plot_card_dist() (poissonmultibernoullimixture method)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.plot_card_dist"]], "plot_card_history() (poissonmultibernoullimixture method)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.plot_card_history"]], "plot_ospa2_history() (poissonmultibernoullimixture method)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.plot_ospa2_history"]], "plot_ospa_history() (poissonmultibernoullimixture method)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.plot_ospa_history"]], "plot_states() (poissonmultibernoullimixture method)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.plot_states"]], "predict() (poissonmultibernoullimixture method)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.predict"]], "prob_death (poissonmultibernoullimixture property)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.prob_death"]], "prob_miss_detection (poissonmultibernoullimixture property)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.prob_miss_detection"]], "save_filter_state() (poissonmultibernoullimixture method)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.save_filter_state"]], "states (poissonmultibernoullimixture property)": [[19, "caser.swarm_estimator.tracker.PoissonMultiBernoulliMixture.states"]], "probabilityhypothesisdensity (class in caser.swarm_estimator.tracker)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity"]], "__init__() (probabilityhypothesisdensity method)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.__init__"]], "animate_state_plot() (probabilityhypothesisdensity method)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.animate_state_plot"]], "calculate_ospa() (probabilityhypothesisdensity method)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.calculate_ospa"]], "cardinality (probabilityhypothesisdensity property)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.cardinality"]], "cleanup() (probabilityhypothesisdensity method)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.cleanup"]], "correct() (probabilityhypothesisdensity method)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.correct"]], "covariances (probabilityhypothesisdensity property)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.covariances"]], "extract_states() (probabilityhypothesisdensity method)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.extract_states"]], "extract_threshold (probabilityhypothesisdensity attribute)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.extract_threshold"]], "filt_state (probabilityhypothesisdensity attribute)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.filt_state"]], "gating_on (probabilityhypothesisdensity attribute)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.gating_on"]], "inv_chi2_gate (probabilityhypothesisdensity attribute)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.inv_chi2_gate"]], "load_filter_state() (probabilityhypothesisdensity method)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.load_filter_state"]], "max_gauss (probabilityhypothesisdensity attribute)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.max_gauss"]], "merge_threshold (probabilityhypothesisdensity attribute)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.merge_threshold"]], "num_birth_terms (probabilityhypothesisdensity property)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.num_birth_terms"]], "ospa_method (probabilityhypothesisdensity property)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.ospa_method"]], "plot_ospa_history() (probabilityhypothesisdensity method)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.plot_ospa_history"]], "plot_states() (probabilityhypothesisdensity method)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.plot_states"]], "predict() (probabilityhypothesisdensity method)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.predict"]], "prob_death (probabilityhypothesisdensity property)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.prob_death"]], "prob_miss_detection (probabilityhypothesisdensity property)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.prob_miss_detection"]], "prune_threshold (probabilityhypothesisdensity attribute)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.prune_threshold"]], "save_filter_state() (probabilityhypothesisdensity method)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.save_filter_state"]], "states (probabilityhypothesisdensity property)": [[20, "caser.swarm_estimator.tracker.ProbabilityHypothesisDensity.states"]], "randomfinitesetbase (class in caser.swarm_estimator.tracker)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase"]], "__init__() (randomfinitesetbase method)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.__init__"]], "birth_terms (randomfinitesetbase attribute)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.birth_terms"]], "calculate_ospa() (randomfinitesetbase method)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.calculate_ospa"]], "cleanup() (randomfinitesetbase method)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.cleanup"]], "clutter_density (randomfinitesetbase attribute)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.clutter_density"]], "clutter_rate (randomfinitesetbase attribute)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.clutter_rate"]], "correct() (randomfinitesetbase method)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.correct"]], "debug_plots (randomfinitesetbase attribute)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.debug_plots"]], "enable_spawning (randomfinitesetbase attribute)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.enable_spawning"]], "extract_states() (randomfinitesetbase method)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.extract_states"]], "filter (randomfinitesetbase attribute)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.filter"]], "inv_chi2_gate (randomfinitesetbase attribute)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.inv_chi2_gate"]], "load_filter_state() (randomfinitesetbase method)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.load_filter_state"]], "num_birth_terms (randomfinitesetbase property)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.num_birth_terms"]], "ospa (randomfinitesetbase attribute)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.ospa"]], "ospa_cardinality (randomfinitesetbase attribute)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.ospa_cardinality"]], "ospa_localization (randomfinitesetbase attribute)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.ospa_localization"]], "ospa_method (randomfinitesetbase property)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.ospa_method"]], "plot_ospa_history() (randomfinitesetbase method)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.plot_ospa_history"]], "predict() (randomfinitesetbase method)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.predict"]], "prob_death (randomfinitesetbase property)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.prob_death"]], "prob_detection (randomfinitesetbase attribute)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.prob_detection"]], "prob_miss_detection (randomfinitesetbase property)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.prob_miss_detection"]], "prob_survive (randomfinitesetbase attribute)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.prob_survive"]], "save_covs (randomfinitesetbase attribute)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.save_covs"]], "save_filter_state() (randomfinitesetbase method)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.save_filter_state"]], "spawn_cov (randomfinitesetbase attribute)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.spawn_cov"]], "spawn_weight (randomfinitesetbase attribute)": [[21, "caser.swarm_estimator.tracker.RandomFiniteSetBase.spawn_weight"]], "smcgeneralizedlabeledmultibernoulli (class in caser.swarm_estimator.tracker)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli"]], "__init__() (smcgeneralizedlabeledmultibernoulli method)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.__init__"]], "calculate_ospa() (smcgeneralizedlabeledmultibernoulli method)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.calculate_ospa"]], "calculate_ospa2() (smcgeneralizedlabeledmultibernoulli method)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.calculate_ospa2"]], "cardinality (smcgeneralizedlabeledmultibernoulli property)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.cardinality"]], "cleanup() (smcgeneralizedlabeledmultibernoulli method)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.cleanup"]], "compute_prob_detection (smcgeneralizedlabeledmultibernoulli attribute)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.compute_prob_detection"]], "compute_prob_survive (smcgeneralizedlabeledmultibernoulli attribute)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.compute_prob_survive"]], "correct() (smcgeneralizedlabeledmultibernoulli method)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.correct"]], "covariances (smcgeneralizedlabeledmultibernoulli property)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.covariances"]], "extract_most_prob_states() (smcgeneralizedlabeledmultibernoulli method)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.extract_most_prob_states"]], "extract_states() (smcgeneralizedlabeledmultibernoulli method)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.extract_states"]], "filt_state (smcgeneralizedlabeledmultibernoulli attribute)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.filt_state"]], "filter (smcgeneralizedlabeledmultibernoulli property)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.filter"]], "labels (smcgeneralizedlabeledmultibernoulli property)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.labels"]], "load_filter_state() (smcgeneralizedlabeledmultibernoulli method)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.load_filter_state"]], "num_birth_terms (smcgeneralizedlabeledmultibernoulli property)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.num_birth_terms"]], "ospa_method (smcgeneralizedlabeledmultibernoulli property)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.ospa_method"]], "plot_card_dist() (smcgeneralizedlabeledmultibernoulli method)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.plot_card_dist"]], "plot_card_history() (smcgeneralizedlabeledmultibernoulli method)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.plot_card_history"]], "plot_ospa2_history() (smcgeneralizedlabeledmultibernoulli method)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.plot_ospa2_history"]], "plot_ospa_history() (smcgeneralizedlabeledmultibernoulli method)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.plot_ospa_history"]], "plot_states_labels() (smcgeneralizedlabeledmultibernoulli method)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.plot_states_labels"]], "predict() (smcgeneralizedlabeledmultibernoulli method)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.predict"]], "prob_death (smcgeneralizedlabeledmultibernoulli property)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.prob_death"]], "prob_miss_detection (smcgeneralizedlabeledmultibernoulli property)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.prob_miss_detection"]], "save_filter_state() (smcgeneralizedlabeledmultibernoulli method)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.save_filter_state"]], "states (smcgeneralizedlabeledmultibernoulli property)": [[22, "caser.swarm_estimator.tracker.SMCGeneralizedLabeledMultiBernoulli.states"]], "smcjointgeneralizedlabeledmultibernoulli (class in caser.swarm_estimator.tracker)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli"]], "__init__() (smcjointgeneralizedlabeledmultibernoulli method)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.__init__"]], "calculate_ospa() (smcjointgeneralizedlabeledmultibernoulli method)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.calculate_ospa"]], "calculate_ospa2() (smcjointgeneralizedlabeledmultibernoulli method)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.calculate_ospa2"]], "cardinality (smcjointgeneralizedlabeledmultibernoulli property)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.cardinality"]], "cleanup() (smcjointgeneralizedlabeledmultibernoulli method)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.cleanup"]], "correct() (smcjointgeneralizedlabeledmultibernoulli method)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.correct"]], "covariances (smcjointgeneralizedlabeledmultibernoulli property)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.covariances"]], "extract_most_prob_states() (smcjointgeneralizedlabeledmultibernoulli method)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.extract_most_prob_states"]], "extract_states() (smcjointgeneralizedlabeledmultibernoulli method)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.extract_states"]], "filt_state (smcjointgeneralizedlabeledmultibernoulli attribute)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.filt_state"]], "filter (smcjointgeneralizedlabeledmultibernoulli property)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.filter"]], "labels (smcjointgeneralizedlabeledmultibernoulli property)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.labels"]], "load_filter_state() (smcjointgeneralizedlabeledmultibernoulli method)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.load_filter_state"]], "num_birth_terms (smcjointgeneralizedlabeledmultibernoulli property)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.num_birth_terms"]], "ospa_method (smcjointgeneralizedlabeledmultibernoulli property)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.ospa_method"]], "plot_card_dist() (smcjointgeneralizedlabeledmultibernoulli method)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.plot_card_dist"]], "plot_card_history() (smcjointgeneralizedlabeledmultibernoulli method)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.plot_card_history"]], "plot_ospa2_history() (smcjointgeneralizedlabeledmultibernoulli method)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.plot_ospa2_history"]], "plot_ospa_history() (smcjointgeneralizedlabeledmultibernoulli method)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.plot_ospa_history"]], "plot_states_labels() (smcjointgeneralizedlabeledmultibernoulli method)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.plot_states_labels"]], "predict() (smcjointgeneralizedlabeledmultibernoulli method)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.predict"]], "prob_death (smcjointgeneralizedlabeledmultibernoulli property)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.prob_death"]], "prob_miss_detection (smcjointgeneralizedlabeledmultibernoulli property)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.prob_miss_detection"]], "save_filter_state() (smcjointgeneralizedlabeledmultibernoulli method)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.save_filter_state"]], "states (smcjointgeneralizedlabeledmultibernoulli property)": [[23, "caser.swarm_estimator.tracker.SMCJointGeneralizedLabeledMultiBernoulli.states"]], "stmgeneralizedlabeledmultibernoulli (class in caser.swarm_estimator.tracker)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli"]], "__init__() (stmgeneralizedlabeledmultibernoulli method)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.__init__"]], "calculate_ospa() (stmgeneralizedlabeledmultibernoulli method)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.calculate_ospa"]], "calculate_ospa2() (stmgeneralizedlabeledmultibernoulli method)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.calculate_ospa2"]], "cardinality (stmgeneralizedlabeledmultibernoulli property)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.cardinality"]], "cleanup() (stmgeneralizedlabeledmultibernoulli method)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.cleanup"]], "correct() (stmgeneralizedlabeledmultibernoulli method)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.correct"]], "covariances (stmgeneralizedlabeledmultibernoulli property)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.covariances"]], "extract_most_prob_states() (stmgeneralizedlabeledmultibernoulli method)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.extract_most_prob_states"]], "extract_states() (stmgeneralizedlabeledmultibernoulli method)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.extract_states"]], "filt_state (stmgeneralizedlabeledmultibernoulli attribute)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.filt_state"]], "filter (stmgeneralizedlabeledmultibernoulli property)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.filter"]], "labels (stmgeneralizedlabeledmultibernoulli property)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.labels"]], "load_filter_state() (stmgeneralizedlabeledmultibernoulli method)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.load_filter_state"]], "num_birth_terms (stmgeneralizedlabeledmultibernoulli property)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.num_birth_terms"]], "ospa_method (stmgeneralizedlabeledmultibernoulli property)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.ospa_method"]], "plot_card_dist() (stmgeneralizedlabeledmultibernoulli method)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.plot_card_dist"]], "plot_card_history() (stmgeneralizedlabeledmultibernoulli method)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.plot_card_history"]], "plot_ospa2_history() (stmgeneralizedlabeledmultibernoulli method)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.plot_ospa2_history"]], "plot_ospa_history() (stmgeneralizedlabeledmultibernoulli method)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.plot_ospa_history"]], "plot_states_labels() (stmgeneralizedlabeledmultibernoulli method)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.plot_states_labels"]], "predict() (stmgeneralizedlabeledmultibernoulli method)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.predict"]], "prob_death (stmgeneralizedlabeledmultibernoulli property)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.prob_death"]], "prob_miss_detection (stmgeneralizedlabeledmultibernoulli property)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.prob_miss_detection"]], "save_filter_state() (stmgeneralizedlabeledmultibernoulli method)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.save_filter_state"]], "states (stmgeneralizedlabeledmultibernoulli property)": [[24, "caser.swarm_estimator.tracker.STMGeneralizedLabeledMultiBernoulli.states"]], "stmjointgeneralizedlabeledmultibernoulli (class in caser.swarm_estimator.tracker)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli"]], "__init__() (stmjointgeneralizedlabeledmultibernoulli method)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.__init__"]], "calculate_ospa() (stmjointgeneralizedlabeledmultibernoulli method)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.calculate_ospa"]], "calculate_ospa2() (stmjointgeneralizedlabeledmultibernoulli method)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.calculate_ospa2"]], "cardinality (stmjointgeneralizedlabeledmultibernoulli property)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.cardinality"]], "cleanup() (stmjointgeneralizedlabeledmultibernoulli method)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.cleanup"]], "correct() (stmjointgeneralizedlabeledmultibernoulli method)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.correct"]], "covariances (stmjointgeneralizedlabeledmultibernoulli property)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.covariances"]], "extract_most_prob_states() (stmjointgeneralizedlabeledmultibernoulli method)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.extract_most_prob_states"]], "extract_states() (stmjointgeneralizedlabeledmultibernoulli method)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.extract_states"]], "filt_state (stmjointgeneralizedlabeledmultibernoulli attribute)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.filt_state"]], "filter (stmjointgeneralizedlabeledmultibernoulli property)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.filter"]], "labels (stmjointgeneralizedlabeledmultibernoulli property)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.labels"]], "load_filter_state() (stmjointgeneralizedlabeledmultibernoulli method)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.load_filter_state"]], "num_birth_terms (stmjointgeneralizedlabeledmultibernoulli property)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.num_birth_terms"]], "ospa_method (stmjointgeneralizedlabeledmultibernoulli property)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.ospa_method"]], "plot_card_dist() (stmjointgeneralizedlabeledmultibernoulli method)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.plot_card_dist"]], "plot_card_history() (stmjointgeneralizedlabeledmultibernoulli method)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.plot_card_history"]], "plot_ospa2_history() (stmjointgeneralizedlabeledmultibernoulli method)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.plot_ospa2_history"]], "plot_ospa_history() (stmjointgeneralizedlabeledmultibernoulli method)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.plot_ospa_history"]], "plot_states_labels() (stmjointgeneralizedlabeledmultibernoulli method)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.plot_states_labels"]], "predict() (stmjointgeneralizedlabeledmultibernoulli method)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.predict"]], "prob_death (stmjointgeneralizedlabeledmultibernoulli property)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.prob_death"]], "prob_miss_detection (stmjointgeneralizedlabeledmultibernoulli property)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.prob_miss_detection"]], "save_filter_state() (stmjointgeneralizedlabeledmultibernoulli method)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.save_filter_state"]], "states (stmjointgeneralizedlabeledmultibernoulli property)": [[25, "caser.swarm_estimator.tracker.STMJointGeneralizedLabeledMultiBernoulli.states"]], "caser.utilities": [[26, "module-caser.utilities"]], "caser.utilities.graphs": [[27, "module-caser.utilities.graphs"]], "a_star_search() (in module caser.utilities.graphs)": [[28, "caser.utilities.graphs.a_star_search"]], "bfm_shortest_path() (in module caser.utilities.graphs)": [[29, "caser.utilities.graphs.bfm_shortest_path"]], "k_shortest() (in module caser.utilities.graphs)": [[30, "caser.utilities.graphs.k_shortest"]], "murty_m_best() (in module caser.utilities.graphs)": [[31, "caser.utilities.graphs.murty_m_best"]], "murty_m_best_all_meas_assigned() (in module caser.utilities.graphs)": [[32, "caser.utilities.graphs.murty_m_best_all_meas_assigned"]], "caser.utilities.graphs_subroutines": [[33, "module-caser.utilities.graphs_subroutines"]], "astarnode (class in caser.utilities.graphs_subroutines)": [[34, "caser.utilities.graphs_subroutines.AStarNode"]], "__init__() (astarnode method)": [[34, "caser.utilities.graphs_subroutines.AStarNode.__init__"]], "assign_opt() (in module caser.utilities.graphs_subroutines)": [[35, "caser.utilities.graphs_subroutines.assign_opt"]], "astar_return_path() (in module caser.utilities.graphs_subroutines)": [[36, "caser.utilities.graphs_subroutines.astar_return_path"]], "caser.utilities.sampling": [[37, "module-caser.utilities.sampling"]], "gibbs() (in module caser.utilities.sampling)": [[38, "caser.utilities.sampling.gibbs"]], "mm_gibbs() (in module caser.utilities.sampling)": [[39, "caser.utilities.sampling.mm_gibbs"]]}})